{"version":3,"sources":["webpack://netlify-cms/..-core/src/components/Editor/EditorControlPane/Widget.js","webpack://netlify-cms/..-core/src/components/Editor/EditorControlPane/EditorControl.js","webpack://netlify-cms/..-core/src/components/Editor/EditorControlPane/EditorControlPane.js","webpack://netlify-cms/..-core/src/components/Editor/EditorPreviewPane/EditorPreviewContent.js","webpack://netlify-cms/..-core/src/components/Editor/EditorPreviewPane/PreviewHOC.js","webpack://netlify-cms/..-core/src/components/Editor/EditorPreviewPane/EditorPreview.js","webpack://netlify-cms/..-core/src/components/Editor/EditorPreviewPane/EditorPreviewPane.js","webpack://netlify-cms/..-core/src/components/Editor/EditorToolbar.js","webpack://netlify-cms/..-core/src/components/Editor/EditorToggle.js","webpack://netlify-cms/..-core/src/components/Editor/EditorInterface.js","webpack://netlify-cms/..-core/src/components/Editor/withWorkflow.js","webpack://netlify-cms/..-core/src/components/Editor/Editor.js"],"names":["truthy","error","isEmpty","value","undefined","hasOwnProperty","length","constructor","Object","keys","immutable","isList","size","Widget_Widget","react","[object Object]","args","super","_defineProperty","this","ref","innerWrappedControl","getWrappedInstance","wrappedControlValid","isValid","scu","shouldComponentUpdate","wrappedControlShouldComponentUpdate","bind","skipWrapped","_this$props","props","field","errors","validatePresence","validatePattern","forEach","func","response","push","wrappedError","validateWrappedControl","onValidate","t","get","type","validationErrorTypes","PRESENCE","message","fieldLabel","pattern","RegExp","first","test","PATTERN","last","Promise","then","validate","err","CUSTOM","fieldName","newValue","newMetadata","newObjectValue","getObjectValue","set","onChange","nextProps","classNameWrapper","hasActiveStyle","queryHits","render","_this$props2","controlComponent","mediaPaths","metadata","onValidateObject","onOpenMediaLibrary","onRemoveMediaControl","onClearMediaControl","onAddAsset","onRemoveInsertedMedia","getAsset","classNameWidget","classNameWidgetActive","classNameLabel","classNameLabelActive","setActiveStyle","setInactiveStyle","editorControl","uniqueFieldId","resolveWidget","getEditorComponents","query","clearSearch","clearFieldErrors","isFetching","loadEntry","fieldsErrors","controlRef","react_default","a","createElement","onChangeObject","forID","processInnerControlRef","prop_types_default","isRequired","ImmutablePropTypes_default","map","bool","string","oneOfType","node","object","array","styles","label","index_esm","netlify_cms_ui_default","controlLabel","textFieldBorder","main","labelActive","active","textLight","labelError","errorText","white","widget","inputPadding","textField","borderRadius","inputBackground","widgetActive","widgetError","ControlContainer","target","ControlErrorsList","ControlHint","EditorControl_EditorControl","Component","EditorControl_defineProperty","activeLabel","uniqueId_default","fieldsMetaData","boundGetAsset","openMediaLibrary","clearMediaControl","removeMediaControl","addAsset","removeInsertedMedia","processControlRef","widgetName","registry","fieldHint","isFieldOptional","key","trim","replace","className","state","styleActive","htmlFor","control","partial_default","setState","ConnectedEditorControl","mapDispatchToProps","mediaLibrary","media","search","collectionName","slug","dispatch","getState","collection","collections","actions_entries","es","reducers","withRef","lib","EditorControlPane_EditorControl","ControlPaneContainer","EditorControlPane_ControlPane","EditorControlPane_defineProperty","fields","componentValidate","wrappedControl","name","entry","i","getIn","propTypes","list","EditorPreviewContent_PreviewContent","previewComponent","previewProps","react_frame_component_lib","context","dist","attachTo","document","scrollingElement","react_is","cloneElement","EditorPreviewContent","PreviewHOC_PreviewHOC","includes","_objectWithoutProperties","EditorPreviewPane_PreviewHOC","isVisible","PreviewContainer","EditorPreview_Preview","widgetFor","filter","PreviewPaneFrame","react_frame_component_lib_default","EditorPreviewPane_PreviewPane","EditorPreviewPane_defineProperty","idx","preview","isMap","values","find","f","nestedFields","singleField","getNestedWidgets","getSingleNested","inferedFields","indexOf","defaultPreview","toString","getWidget","widgetsForNestedFields","val","widgets","data","inferFields","titleField","reducers_collections","shortTitleField","authorField","fieldInference","title","shortTitle","author","_objectSpread","widgetsFor","styleEls","style","raw","href","rel","head","UI","initialContent","EditorToolbar_styles","buttonMargin","toolbarSection","ToolbarContainer","ToolbarSectionMain","ToolbarSubSectionFirst","ToolbarSubSectionLast","ToolbarSectionBackLink","Link","ToolbarSectionMeta","ToolbarDropdown","teal","BackArrow","textLead","BackCollection","BackStatus","BackStatusUnchanged","textBadgeSuccess","successText","BackStatusChanged","textBadgeDanger","ToolbarButton","button","default","DeleteButton","lightRed","SaveButton","lightBlue","StatusPublished","PublishButton","StatusButton","tealLight","StatusDropdownItem","infoText","EditorToolbar_EditorToolbar","EditorToolbar_defineProperty","showDelete","onDelete","onClick","onPersist","onPersistAndNew","isPersisting","hasChanged","isNewEntry","dropdownTopOverlap","dropdownWidth","renderButton","icon","iconDirection","_this$props3","onDeleteUnpublishedChanges","hasUnpublishedChanges","isDeleting","isModification","deleteLabel","_this$props4","isUpdatingStatus","isPublishing","onChangeStatus","onPublish","onPublishAndNew","currentStatus","Fragment","publishModes","_this$props5","user","displayUrl","hasWorkflow","onLogoutClick","to","collectionLabel","renderWorkflowSaveControls","renderSimpleSaveControls","renderWorkflowPublishControls","renderSimplePublishControls","SettingsDropdown","imageUrl","Editor_EditorToolbar","EditorToggleButton","dropMiddle","isActive","EditorToggle","enabled","Editor_EditorToggle","PREVIEW_VISIBLE","SCROLL_SYNC_ENABLED","EditorInterface_styles","splitPane","card","pane","GrayLight","StyledSplitPane","dist_index_esm","NoPreviewContainer","EditorContainer","background","EditorInterface_Editor","PreviewPaneContainer","blockEntry","EditorInterface_ControlPaneContainer","ViewControls","EditorInterface_EditorInterface","EditorInterface_defineProperty","showEventBlocker","previewVisible","localStorage","getItem","scrollSyncEnabled","opts","_opts$createNew","createNew","controlPaneRef","_opts$createNew2","newPreviewVisible","setItem","newScrollSyncEnabled","_this$state","collectionPreviewEnabled","editor","c","editorWithPreview","maxSize","defaultSize","onDragStarted","handleSplitPaneDragStart","onDragFinished","handleSplitPaneDragFinished","handleOnPersist","handleOnPublish","handleTogglePreview","handleToggleScrollSync","Editor_EditorInterface","withWorkflow_mapStateToProps","ownProps","isEditorialWorkflow","config","match","params","returnObj","newEntry","unpublishedEntry","mergeProps","stateProps","dispatchProps","editorialWorkflow","persistEntry","withWorkflow_objectSpread","navigateCollection","collectionPath","routing_history","navigateToCollection","navigateToNewEntry","navigateToEntry","Editor_Editor","Editor_defineProperty","createDraftFromEntry","newStatusName","entryDraft","updateUnpublishedEntryStatus","window","alert","newStatus","async","createEmptyDraft","publishUnpublishedEntry","confirm","deleteEntry","setTimeout","deleteUnpublishedEntry","componentDidMount","_this$props6","loadEntries","collectionEntriesLoaded","leaveMessage","exitBlocker","event","returnValue","addEventListener","unblock","block","location","action","newRecord","newEntryPath","pathname","unlisten","listen","entriesPath","startsWith","componentDidUpdate","prevProps","newSlug","_this$props7","serializeEntryValues","deserializedEntry","createDraft","componentWillUnmount","discardDraft","removeEventListener","_this$props8","changeDraftField","changeDraftFieldValidation","logoutUser","handlePersistEntry","handleDeleteEntry","handleDeleteUnpublishedChanges","handleChangeStatus","handlePublishEntry","shape","__webpack_exports__","auth","entries","actions_auth","Editor","withWorkflow"],"mappings":"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","file":"dist/3.netlify-cms.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\nimport { Map, List } from 'immutable';\r\nimport ValidationErrorTypes from 'Constants/validationErrorTypes';\r\n\r\nconst truthy = () => ({ error: false });\r\n\r\nconst isEmpty = value =>\r\n  value === null ||\r\n  value === undefined ||\r\n  (value.hasOwnProperty('length') && value.length === 0) ||\r\n  (value.constructor === Object && Object.keys(value).length === 0) ||\r\n  (List.isList(value) && value.size === 0);\r\n\r\nexport default class Widget extends Component {\r\n  static propTypes = {\r\n    controlComponent: PropTypes.func.isRequired,\r\n    field: ImmutablePropTypes.map.isRequired,\r\n    hasActiveStyle: PropTypes.bool,\r\n    setActiveStyle: PropTypes.func.isRequired,\r\n    setInactiveStyle: PropTypes.func.isRequired,\r\n    classNameWrapper: PropTypes.string.isRequired,\r\n    classNameWidget: PropTypes.string.isRequired,\r\n    classNameWidgetActive: PropTypes.string.isRequired,\r\n    classNameLabel: PropTypes.string.isRequired,\r\n    classNameLabelActive: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.node,\r\n      PropTypes.object,\r\n      PropTypes.string,\r\n      PropTypes.bool,\r\n    ]),\r\n    mediaPaths: ImmutablePropTypes.map.isRequired,\r\n    metadata: ImmutablePropTypes.map,\r\n    fieldsErrors: ImmutablePropTypes.map,\r\n    onChange: PropTypes.func.isRequired,\r\n    onValidate: PropTypes.func,\r\n    onOpenMediaLibrary: PropTypes.func.isRequired,\r\n    onClearMediaControl: PropTypes.func.isRequired,\r\n    onRemoveMediaControl: PropTypes.func.isRequired,\r\n    onAddAsset: PropTypes.func.isRequired,\r\n    onRemoveInsertedMedia: PropTypes.func.isRequired,\r\n    getAsset: PropTypes.func.isRequired,\r\n    resolveWidget: PropTypes.func.isRequired,\r\n    getEditorComponents: PropTypes.func.isRequired,\r\n    isFetching: PropTypes.bool,\r\n    controlRef: PropTypes.func,\r\n    query: PropTypes.func.isRequired,\r\n    clearSearch: PropTypes.func.isRequired,\r\n    clearFieldErrors: PropTypes.func.isRequired,\r\n    queryHits: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n    editorControl: PropTypes.func.isRequired,\r\n    uniqueFieldId: PropTypes.string.isRequired,\r\n    loadEntry: PropTypes.func.isRequired,\r\n    t: PropTypes.func.isRequired,\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    /**\r\n     * Allow widgets to provide their own `shouldComponentUpdate` method.\r\n     */\r\n    if (this.wrappedControlShouldComponentUpdate) {\r\n      return this.wrappedControlShouldComponentUpdate(nextProps);\r\n    }\r\n    return (\r\n      this.props.value !== nextProps.value ||\r\n      this.props.classNameWrapper !== nextProps.classNameWrapper ||\r\n      this.props.hasActiveStyle !== nextProps.hasActiveStyle ||\r\n      this.props.queryHits !== nextProps.queryHits\r\n    );\r\n  }\r\n\r\n  processInnerControlRef = ref => {\r\n    if (!ref) return;\r\n\r\n    /**\r\n     * If the widget is a container that receives state updates from the store,\r\n     * we'll need to get the ref of the actual control via the `react-redux`\r\n     * `getWrappedInstance` method. Note that connected widgets must pass\r\n     * `withRef: true` to `connect` in the options object.\r\n     */\r\n    this.innerWrappedControl = ref.getWrappedInstance ? ref.getWrappedInstance() : ref;\r\n\r\n    this.wrappedControlValid = this.innerWrappedControl.isValid || truthy;\r\n\r\n    /**\r\n     * Get the `shouldComponentUpdate` method from the wrapped control, and\r\n     * provide the control instance is the `this` binding.\r\n     */\r\n    const { shouldComponentUpdate: scu } = this.innerWrappedControl;\r\n    this.wrappedControlShouldComponentUpdate = scu && scu.bind(this.innerWrappedControl);\r\n  };\r\n\r\n  validate = (skipWrapped = false) => {\r\n    const { field, value } = this.props;\r\n    const errors = [];\r\n    const validations = [this.validatePresence, this.validatePattern];\r\n    validations.forEach(func => {\r\n      const response = func(field, value);\r\n      if (response.error) errors.push(response.error);\r\n    });\r\n    if (skipWrapped) {\r\n      if (skipWrapped.error) errors.push(skipWrapped.error);\r\n    } else {\r\n      const wrappedError = this.validateWrappedControl(field);\r\n      if (wrappedError.error) errors.push(wrappedError.error);\r\n    }\r\n    this.props.onValidate(errors);\r\n  };\r\n\r\n  validatePresence = (field, value) => {\r\n    const t = this.props.t;\r\n    const isRequired = field.get('required', true);\r\n    if (isRequired && isEmpty(value)) {\r\n      const error = {\r\n        type: ValidationErrorTypes.PRESENCE,\r\n        message: t('editor.editorControlPane.widget.required', {\r\n          fieldLabel: field.get('label', field.get('name')),\r\n        }),\r\n      };\r\n\r\n      return { error };\r\n    }\r\n    return { error: false };\r\n  };\r\n\r\n  validatePattern = (field, value) => {\r\n    const t = this.props.t;\r\n    const pattern = field.get('pattern', false);\r\n\r\n    if (isEmpty(value)) {\r\n      return { error: false };\r\n    }\r\n\r\n    if (pattern && !RegExp(pattern.first()).test(value)) {\r\n      const error = {\r\n        type: ValidationErrorTypes.PATTERN,\r\n        message: t('editor.editorControlPane.widget.regexPattern', {\r\n          fieldLabel: field.get('label', field.get('name')),\r\n          pattern: pattern.last(),\r\n        }),\r\n      };\r\n\r\n      return { error };\r\n    }\r\n\r\n    return { error: false };\r\n  };\r\n\r\n  validateWrappedControl = field => {\r\n    const t = this.props.t;\r\n    const response = this.wrappedControlValid();\r\n    if (typeof response === 'boolean') {\r\n      const isValid = response;\r\n      return { error: !isValid };\r\n    } else if (response.hasOwnProperty('error')) {\r\n      return response;\r\n    } else if (response instanceof Promise) {\r\n      response.then(\r\n        () => {\r\n          this.validate({ error: false });\r\n        },\r\n        err => {\r\n          const error = {\r\n            type: ValidationErrorTypes.CUSTOM,\r\n            message: `${field.get('label', field.get('name'))} - ${err}.`,\r\n          };\r\n\r\n          this.validate({ error });\r\n        },\r\n      );\r\n\r\n      const error = {\r\n        type: ValidationErrorTypes.CUSTOM,\r\n        message: t('editor.editorControlPane.widget.processing', {\r\n          fieldLabel: field.get('label', field.get('name')),\r\n        }),\r\n      };\r\n\r\n      return { error };\r\n    }\r\n    return { error: false };\r\n  };\r\n\r\n  /**\r\n   * In case the `onChangeObject` function is frozen by a child widget implementation,\r\n   * e.g. when debounced, always get the latest object value instead of using\r\n   * `this.props.value` directly.\r\n   */\r\n  getObjectValue = () => this.props.value || Map();\r\n\r\n  /**\r\n   * Change handler for fields that are nested within another field.\r\n   */\r\n  onChangeObject = (fieldName, newValue, newMetadata) => {\r\n    const newObjectValue = this.getObjectValue().set(fieldName, newValue);\r\n    return this.props.onChange(newObjectValue, newMetadata);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      controlComponent,\r\n      field,\r\n      value,\r\n      mediaPaths,\r\n      metadata,\r\n      onChange,\r\n      onValidateObject,\r\n      onOpenMediaLibrary,\r\n      onRemoveMediaControl,\r\n      onClearMediaControl,\r\n      onAddAsset,\r\n      onRemoveInsertedMedia,\r\n      getAsset,\r\n      classNameWrapper,\r\n      classNameWidget,\r\n      classNameWidgetActive,\r\n      classNameLabel,\r\n      classNameLabelActive,\r\n      setActiveStyle,\r\n      setInactiveStyle,\r\n      hasActiveStyle,\r\n      editorControl,\r\n      uniqueFieldId,\r\n      resolveWidget,\r\n      getEditorComponents,\r\n      query,\r\n      queryHits,\r\n      clearSearch,\r\n      clearFieldErrors,\r\n      isFetching,\r\n      loadEntry,\r\n      fieldsErrors,\r\n      controlRef,\r\n      t,\r\n    } = this.props;\r\n    return React.createElement(controlComponent, {\r\n      field,\r\n      value,\r\n      mediaPaths,\r\n      metadata,\r\n      onChange,\r\n      onChangeObject: this.onChangeObject,\r\n      onValidateObject,\r\n      onOpenMediaLibrary,\r\n      onClearMediaControl,\r\n      onRemoveMediaControl,\r\n      onAddAsset,\r\n      onRemoveInsertedMedia,\r\n      getAsset,\r\n      forID: uniqueFieldId,\r\n      ref: this.processInnerControlRef,\r\n      classNameWrapper,\r\n      classNameWidget,\r\n      classNameWidgetActive,\r\n      classNameLabel,\r\n      classNameLabelActive,\r\n      setActiveStyle,\r\n      setInactiveStyle,\r\n      hasActiveStyle,\r\n      editorControl,\r\n      resolveWidget,\r\n      getEditorComponents,\r\n      query,\r\n      queryHits,\r\n      clearSearch,\r\n      clearFieldErrors,\r\n      isFetching,\r\n      loadEntry,\r\n      fieldsErrors,\r\n      controlRef,\r\n      t,\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\nimport { translate } from 'react-polyglot';\r\nimport styled, { css, cx } from 'react-emotion';\r\nimport { partial, uniqueId } from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport { colors, colorsRaw, transitions, lengths, borders } from 'netlify-cms-ui-default';\r\nimport { resolveWidget, getEditorComponents } from 'Lib/registry';\r\nimport { clearFieldErrors } from 'Actions/entries';\r\nimport { addAsset } from 'Actions/media';\r\nimport { query, clearSearch } from 'Actions/search';\r\nimport { loadEntry } from 'Actions/entries';\r\nimport {\r\n  openMediaLibrary,\r\n  removeInsertedMedia,\r\n  clearMediaControl,\r\n  removeMediaControl,\r\n} from 'Actions/mediaLibrary';\r\nimport { getAsset } from 'Reducers';\r\nimport Widget from './Widget';\r\n\r\nconst styles = {\r\n  label: css`\r\n    color: ${colors.controlLabel};\r\n    background-color: ${colors.textFieldBorder};\r\n    display: inline-block;\r\n    font-size: 12px;\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n    border: 0;\r\n    border-radius: 3px 3px 0 0;\r\n    padding: 3px 6px 2px;\r\n    margin: 0;\r\n    transition: all ${transitions.main};\r\n    position: relative;\r\n\r\n    /**\r\n     * Faux outside curve into top of input\r\n     */\r\n    &:before,\r\n    &:after {\r\n      content: '';\r\n      display: block;\r\n      position: absolute;\r\n      top: 0;\r\n      right: -4px;\r\n      height: 100%;\r\n      width: 4px;\r\n      background-color: inherit;\r\n    }\r\n\r\n    &:after {\r\n      border-bottom-left-radius: 3px;\r\n      background-color: #fff;\r\n    }\r\n  `,\r\n  labelActive: css`\r\n    background-color: ${colors.active};\r\n    color: ${colors.textLight};\r\n  `,\r\n  labelError: css`\r\n    background-color: ${colors.errorText};\r\n    color: ${colorsRaw.white};\r\n  `,\r\n  widget: css`\r\n    display: block;\r\n    width: 100%;\r\n    padding: ${lengths.inputPadding};\r\n    margin: 0;\r\n    border: ${borders.textField};\r\n    border-radius: ${lengths.borderRadius};\r\n    border-top-left-radius: 0;\r\n    outline: 0;\r\n    box-shadow: none;\r\n    background-color: ${colors.inputBackground};\r\n    color: #444a57;\r\n    transition: border-color ${transitions.main};\r\n    position: relative;\r\n    font-size: 15px;\r\n    line-height: 1.5;\r\n\r\n    select& {\r\n      text-indent: 14px;\r\n      height: 58px;\r\n    }\r\n  `,\r\n  widgetActive: css`\r\n    border-color: ${colors.active};\r\n  `,\r\n  widgetError: css`\r\n    border-color: ${colors.errorText};\r\n  `,\r\n};\r\n\r\nconst ControlContainer = styled.div`\r\n  margin-top: 16px;\r\n\r\n  &:first-child {\r\n    margin-top: 36px;\r\n  }\r\n`;\r\n\r\nconst ControlErrorsList = styled.ul`\r\n  list-style-type: none;\r\n  font-size: 12px;\r\n  color: ${colors.errorText};\r\n  margin-bottom: 5px;\r\n  text-align: right;\r\n  text-transform: uppercase;\r\n  position: relative;\r\n  font-weight: 600;\r\n  top: 20px;\r\n`;\r\n\r\nexport const ControlHint = styled.p`\r\n  margin-bottom: 0;\r\n  padding: 3px 0;\r\n  font-size: 12px;\r\n  color: ${({ active, error }) =>\r\n    error ? colors.errorText : active ? colors.active : colors.controlLabel};\r\n  transition: color ${transitions.main};\r\n`;\r\n\r\nclass EditorControl extends React.Component {\r\n  static propTypes = {\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.node,\r\n      PropTypes.object,\r\n      PropTypes.string,\r\n      PropTypes.bool,\r\n    ]),\r\n    field: ImmutablePropTypes.map.isRequired,\r\n    fieldsMetaData: ImmutablePropTypes.map,\r\n    fieldsErrors: ImmutablePropTypes.map,\r\n    mediaPaths: ImmutablePropTypes.map.isRequired,\r\n    boundGetAsset: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    openMediaLibrary: PropTypes.func.isRequired,\r\n    addAsset: PropTypes.func.isRequired,\r\n    removeInsertedMedia: PropTypes.func.isRequired,\r\n    onValidate: PropTypes.func,\r\n    processControlRef: PropTypes.func,\r\n    controlRef: PropTypes.func,\r\n    query: PropTypes.func.isRequired,\r\n    queryHits: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n    isFetching: PropTypes.bool,\r\n    clearSearch: PropTypes.func.isRequired,\r\n    clearFieldErrors: PropTypes.func.isRequired,\r\n    loadEntry: PropTypes.func.isRequired,\r\n    t: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    activeLabel: false,\r\n  };\r\n\r\n  uniqueFieldId = uniqueId(`${this.props.field.get('name')}-field-`);\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      field,\r\n      fieldsMetaData,\r\n      fieldsErrors,\r\n      mediaPaths,\r\n      boundGetAsset,\r\n      onChange,\r\n      openMediaLibrary,\r\n      clearMediaControl,\r\n      removeMediaControl,\r\n      addAsset,\r\n      removeInsertedMedia,\r\n      onValidate,\r\n      processControlRef,\r\n      controlRef,\r\n      query,\r\n      queryHits,\r\n      isFetching,\r\n      clearSearch,\r\n      clearFieldErrors,\r\n      loadEntry,\r\n      t,\r\n    } = this.props;\r\n    const widgetName = field.get('widget');\r\n    const widget = resolveWidget(widgetName);\r\n    const fieldName = field.get('name');\r\n    const fieldHint = field.get('hint');\r\n    const isFieldOptional = field.get('required') === false;\r\n    const onValidateObject = onValidate;\r\n    const metadata = fieldsMetaData && fieldsMetaData.get(fieldName);\r\n    const errors = fieldsErrors && fieldsErrors.get(this.uniqueFieldId);\r\n    return (\r\n      <ControlContainer>\r\n        <ControlErrorsList>\r\n          {errors &&\r\n            errors.map(\r\n              error =>\r\n                error.message &&\r\n                typeof error.message === 'string' && (\r\n                  <li key={error.message.trim().replace(/[^a-z0-9]+/gi, '-')}>{error.message}</li>\r\n                ),\r\n            )}\r\n        </ControlErrorsList>\r\n        <label\r\n          className={cx(\r\n            styles.label,\r\n            { [styles.labelActive]: this.state.styleActive },\r\n            { [styles.labelError]: !!errors },\r\n          )}\r\n          htmlFor={this.uniqueFieldId}\r\n        >\r\n          {`${field.get('label', field.get('name'))}${isFieldOptional ? ' (optional)' : ''}`}\r\n        </label>\r\n        <Widget\r\n          classNameWrapper={cx(\r\n            styles.widget,\r\n            { [styles.widgetActive]: this.state.styleActive },\r\n            { [styles.widgetError]: !!errors },\r\n          )}\r\n          classNameWidget={styles.widget}\r\n          classNameWidgetActive={styles.widgetActive}\r\n          classNameLabel={styles.label}\r\n          classNameLabelActive={styles.labelActive}\r\n          controlComponent={widget.control}\r\n          field={field}\r\n          uniqueFieldId={this.uniqueFieldId}\r\n          value={value}\r\n          mediaPaths={mediaPaths}\r\n          metadata={metadata}\r\n          onChange={(newValue, newMetadata) => onChange(fieldName, newValue, newMetadata)}\r\n          onValidate={onValidate && partial(onValidate, this.uniqueFieldId)}\r\n          onOpenMediaLibrary={openMediaLibrary}\r\n          onClearMediaControl={clearMediaControl}\r\n          onRemoveMediaControl={removeMediaControl}\r\n          onRemoveInsertedMedia={removeInsertedMedia}\r\n          onAddAsset={addAsset}\r\n          getAsset={boundGetAsset}\r\n          hasActiveStyle={this.state.styleActive}\r\n          setActiveStyle={() => this.setState({ styleActive: true })}\r\n          setInactiveStyle={() => this.setState({ styleActive: false })}\r\n          resolveWidget={resolveWidget}\r\n          getEditorComponents={getEditorComponents}\r\n          ref={processControlRef && partial(processControlRef, field)}\r\n          controlRef={controlRef}\r\n          editorControl={ConnectedEditorControl}\r\n          query={query}\r\n          loadEntry={loadEntry}\r\n          queryHits={queryHits}\r\n          clearSearch={clearSearch}\r\n          clearFieldErrors={clearFieldErrors}\r\n          isFetching={isFetching}\r\n          fieldsErrors={fieldsErrors}\r\n          onValidateObject={onValidateObject}\r\n          t={t}\r\n        />\r\n        {fieldHint && (\r\n          <ControlHint active={this.state.styleActive} error={!!errors}>\r\n            {fieldHint}\r\n          </ControlHint>\r\n        )}\r\n      </ControlContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  mediaPaths: state.mediaLibrary.get('controlMedia'),\r\n  boundGetAsset: getAsset.bind(null, state),\r\n  isFetching: state.search.get('isFetching'),\r\n  queryHits: state.search.get('queryHits'),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  openMediaLibrary,\r\n  clearMediaControl,\r\n  removeMediaControl,\r\n  removeInsertedMedia,\r\n  addAsset,\r\n  query,\r\n  loadEntry: (collectionName, slug) => (dispatch, getState) => {\r\n    const collection = getState().collections.get(collectionName);\r\n    return loadEntry(collection, slug)(dispatch, getState);\r\n  },\r\n  clearSearch,\r\n  clearFieldErrors,\r\n};\r\n\r\nconst ConnectedEditorControl = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  null,\r\n  { withRef: true },\r\n)(translate()(EditorControl));\r\n\r\nexport default ConnectedEditorControl;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\nimport styled from 'react-emotion';\r\nimport EditorControl, { ControlHint } from './EditorControl';\r\n\r\nconst ControlPaneContainer = styled.div`\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding-bottom: 16px;\r\n\r\n  p:not(${ControlHint}) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport default class ControlPane extends React.Component {\r\n  componentValidate = {};\r\n\r\n  controlRef(field, wrappedControl) {\r\n    if (!wrappedControl) return;\r\n    const name = field.get('name');\r\n    const widget = field.get('widget');\r\n    if (widget === 'list' || widget === 'object') {\r\n      this.componentValidate[name] = wrappedControl.innerWrappedControl.validate;\r\n    } else {\r\n      this.componentValidate[name] = wrappedControl.validate;\r\n    }\r\n  }\r\n\r\n  validate = () => {\r\n    this.props.fields.forEach(field => {\r\n      if (field.get('widget') === 'hidden') return;\r\n      this.componentValidate[field.get('name')]();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      collection,\r\n      fields,\r\n      entry,\r\n      fieldsMetaData,\r\n      fieldsErrors,\r\n      onChange,\r\n      onValidate,\r\n    } = this.props;\r\n\r\n    if (!collection || !fields) {\r\n      return null;\r\n    }\r\n\r\n    if (entry.size === 0 || entry.get('partial') === true) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <ControlPaneContainer>\r\n        {fields.map(\r\n          (field, i) =>\r\n            field.get('widget') === 'hidden' ? null : (\r\n              <EditorControl\r\n                key={i}\r\n                field={field}\r\n                value={entry.getIn(['data', field.get('name')])}\r\n                fieldsMetaData={fieldsMetaData}\r\n                fieldsErrors={fieldsErrors}\r\n                onChange={onChange}\r\n                onValidate={onValidate}\r\n                processControlRef={this.controlRef.bind(this)}\r\n                controlRef={this.controlRef}\r\n              />\r\n            ),\r\n        )}\r\n      </ControlPaneContainer>\r\n    );\r\n  }\r\n}\r\n\r\nControlPane.propTypes = {\r\n  collection: ImmutablePropTypes.map.isRequired,\r\n  entry: ImmutablePropTypes.map.isRequired,\r\n  fields: ImmutablePropTypes.list.isRequired,\r\n  fieldsMetaData: ImmutablePropTypes.map.isRequired,\r\n  fieldsErrors: ImmutablePropTypes.map.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onValidate: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { isElement } from 'react-is';\r\nimport { ScrollSyncPane } from 'react-scroll-sync';\r\nimport { FrameContextConsumer } from 'react-frame-component';\r\n\r\n/**\r\n * We need to create a lightweight component here so that we can access the\r\n * context within the Frame. This allows us to attach the ScrollSyncPane to the\r\n * body.\r\n */\r\nclass PreviewContent extends React.Component {\r\n  render() {\r\n    const { previewComponent, previewProps } = this.props;\r\n    return (\r\n      <FrameContextConsumer>\r\n        {context => (\r\n          <ScrollSyncPane attachTo={context.document.scrollingElement}>\r\n            {isElement(previewComponent)\r\n              ? React.cloneElement(previewComponent, previewProps)\r\n              : React.createElement(previewComponent, previewProps)}\r\n          </ScrollSyncPane>\r\n        )}\r\n      </FrameContextConsumer>\r\n    );\r\n  }\r\n}\r\n\r\nPreviewContent.propTypes = {\r\n  previewComponent: PropTypes.func.isRequired,\r\n  previewProps: PropTypes.object,\r\n};\r\n\r\nexport default PreviewContent;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\n\r\nclass PreviewHOC extends React.Component {\r\n  /**\r\n   * Only re-render on value change, but always re-render objects and lists.\r\n   * Their child widgets will each also be wrapped with this component, and\r\n   * will only be updated on value change.\r\n   */\r\n  shouldComponentUpdate(nextProps) {\r\n    const isWidgetContainer = ['object', 'list'].includes(nextProps.field.get('widget'));\r\n    return isWidgetContainer || this.props.value !== nextProps.value;\r\n  }\r\n\r\n  render() {\r\n    const { previewComponent, ...props } = this.props;\r\n    return React.createElement(previewComponent, props);\r\n  }\r\n}\r\n\r\nPreviewHOC.propTypes = {\r\n  previewComponent: PropTypes.func.isRequired,\r\n  field: ImmutablePropTypes.map.isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.node, PropTypes.object, PropTypes.string, PropTypes.bool]),\r\n};\r\n\r\nexport default PreviewHOC;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\nimport styled from 'react-emotion';\r\n\r\nfunction isVisible(field) {\r\n  return field.get('widget') !== 'hidden';\r\n}\r\n\r\nconst PreviewContainer = styled.div`\r\n  font-family: Roboto, 'Helvetica Neue', HelveticaNeue, Helvetica, Arial, sans-serif;\r\n`;\r\n\r\n/**\r\n * Use a stateful component so that child components can effectively utilize\r\n * `shouldComponentUpdate`.\r\n */\r\nexport default class Preview extends React.Component {\r\n  render() {\r\n    const { collection, fields, widgetFor } = this.props;\r\n    if (!collection || !fields) {\r\n      return null;\r\n    }\r\n    return (\r\n      <PreviewContainer>\r\n        {fields.filter(isVisible).map(field => (\r\n          <div key={field.get('name')}>{widgetFor(field.get('name'))}</div>\r\n        ))}\r\n      </PreviewContainer>\r\n    );\r\n  }\r\n}\r\n\r\nPreview.propTypes = {\r\n  collection: ImmutablePropTypes.map.isRequired,\r\n  entry: ImmutablePropTypes.map.isRequired,\r\n  fields: ImmutablePropTypes.list.isRequired,\r\n  getAsset: PropTypes.func.isRequired,\r\n  widgetFor: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport styled from 'react-emotion';\r\nimport { List, Map } from 'immutable';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\nimport Frame from 'react-frame-component';\r\nimport { lengths } from 'netlify-cms-ui-default';\r\nimport { resolveWidget, getPreviewTemplate, getPreviewStyles } from 'Lib/registry';\r\nimport { ErrorBoundary } from 'UI';\r\nimport { selectTemplateName, selectInferedField } from 'Reducers/collections';\r\nimport { INFERABLE_FIELDS } from 'Constants/fieldInference';\r\nimport EditorPreviewContent from './EditorPreviewContent.js';\r\nimport PreviewHOC from './PreviewHOC';\r\nimport EditorPreview from './EditorPreview';\r\n\r\nconst PreviewPaneFrame = styled(Frame)`\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  background: #fff;\r\n  border-radius: ${lengths.borderRadius};\r\n`;\r\n\r\nexport default class PreviewPane extends React.Component {\r\n  getWidget = (field, value, props, idx = null) => {\r\n    const { fieldsMetaData, getAsset, entry } = props;\r\n    const widget = resolveWidget(field.get('widget'));\r\n    const key = idx ? field.get('name') + '_' + idx : field.get('name');\r\n\r\n    /**\r\n     * Use an HOC to provide conditional updates for all previews.\r\n     */\r\n    return !widget.preview ? null : (\r\n      <PreviewHOC\r\n        previewComponent={widget.preview}\r\n        key={key}\r\n        field={field}\r\n        getAsset={getAsset}\r\n        value={value && Map.isMap(value) ? value.get(field.get('name')) : value}\r\n        metadata={fieldsMetaData && fieldsMetaData.get(field.get('name'))}\r\n        entry={entry}\r\n        fieldsMetaData={fieldsMetaData}\r\n      />\r\n    );\r\n  };\r\n\r\n  inferedFields = {};\r\n\r\n  inferFields() {\r\n    const titleField = selectInferedField(this.props.collection, 'title');\r\n    const shortTitleField = selectInferedField(this.props.collection, 'shortTitle');\r\n    const authorField = selectInferedField(this.props.collection, 'author');\r\n\r\n    this.inferedFields = {};\r\n    if (titleField) this.inferedFields[titleField] = INFERABLE_FIELDS.title;\r\n    if (shortTitleField) this.inferedFields[shortTitleField] = INFERABLE_FIELDS.shortTitle;\r\n    if (authorField) this.inferedFields[authorField] = INFERABLE_FIELDS.author;\r\n  }\r\n\r\n  /**\r\n   * Returns the widget component for a named field, and makes recursive calls\r\n   * to retrieve components for nested and deeply nested fields, which occur in\r\n   * object and list type fields. Used internally to retrieve widgets, and also\r\n   * exposed for use in custom preview templates.\r\n   */\r\n  widgetFor = (name, fields = this.props.fields, values = this.props.entry.get('data')) => {\r\n    // We retrieve the field by name so that this function can also be used in\r\n    // custom preview templates, where the field object can't be passed in.\r\n    let field = fields && fields.find(f => f.get('name') === name);\r\n    let value = values && values.get(field.get('name'));\r\n    let nestedFields = field.get('fields');\r\n    let singleField = field.get('field');\r\n\r\n    if (nestedFields) {\r\n      field = field.set('fields', this.getNestedWidgets(nestedFields, value));\r\n    }\r\n\r\n    if (singleField) {\r\n      field = field.set('field', this.getSingleNested(singleField, value));\r\n    }\r\n\r\n    const labelledWidgets = ['string', 'text', 'number'];\r\n    if (Object.keys(this.inferedFields).indexOf(name) !== -1) {\r\n      value = this.inferedFields[name].defaultPreview(value);\r\n    } else if (\r\n      value &&\r\n      labelledWidgets.indexOf(field.get('widget')) !== -1 &&\r\n      value.toString().length < 50\r\n    ) {\r\n      value = (\r\n        <div>\r\n          <strong>{field.get('label', field.get('name'))}:</strong> {value}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return value ? this.getWidget(field, value, this.props) : null;\r\n  };\r\n\r\n  /**\r\n   * Retrieves widgets for nested fields (children of object/list fields)\r\n   */\r\n  getNestedWidgets = (fields, values) => {\r\n    // Fields nested within a list field will be paired with a List of value Maps.\r\n    if (List.isList(values)) {\r\n      return values.map(value => this.widgetsForNestedFields(fields, value));\r\n    }\r\n    // Fields nested within an object field will be paired with a single Map of values.\r\n    return this.widgetsForNestedFields(fields, values);\r\n  };\r\n\r\n  getSingleNested = (field, values) => {\r\n    if (List.isList(values)) {\r\n      return values.map((value, idx) => this.getWidget(field, value, this.props, idx));\r\n    }\r\n    return this.getWidget(field, values, this.props);\r\n  };\r\n\r\n  /**\r\n   * Use widgetFor as a mapping function for recursive widget retrieval\r\n   */\r\n  widgetsForNestedFields = (fields, values) => {\r\n    return fields.map(field => this.widgetFor(field.get('name'), fields, values));\r\n  };\r\n\r\n  /**\r\n   * This function exists entirely to expose nested widgets for object and list\r\n   * fields to custom preview templates.\r\n   *\r\n   * TODO: see if widgetFor can now provide this functionality for preview templates\r\n   */\r\n  widgetsFor = name => {\r\n    const { fields, entry } = this.props;\r\n    const field = fields.find(f => f.get('name') === name);\r\n    const nestedFields = field && field.get('fields');\r\n    const value = entry.getIn(['data', field.get('name')]);\r\n\r\n    if (List.isList(value)) {\r\n      return value.map(val => {\r\n        const widgets =\r\n          nestedFields &&\r\n          Map(\r\n            nestedFields.map((f, i) => [\r\n              f.get('name'),\r\n              <div key={i}>{this.getWidget(f, val, this.props)}</div>,\r\n            ]),\r\n          );\r\n        return Map({ data: val, widgets });\r\n      });\r\n    }\r\n\r\n    return Map({\r\n      data: value,\r\n      widgets:\r\n        nestedFields &&\r\n        Map(nestedFields.map(f => [f.get('name'), this.getWidget(f, value, this.props)])),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { entry, collection } = this.props;\r\n\r\n    if (!entry || !entry.get('data')) {\r\n      return null;\r\n    }\r\n\r\n    const previewComponent =\r\n      getPreviewTemplate(selectTemplateName(collection, entry.get('slug'))) || EditorPreview;\r\n\r\n    this.inferFields();\r\n\r\n    const previewProps = {\r\n      ...this.props,\r\n      widgetFor: this.widgetFor,\r\n      widgetsFor: this.widgetsFor,\r\n    };\r\n\r\n    const styleEls = getPreviewStyles().map((style, i) => {\r\n      if (style.raw) {\r\n        return <style key={i}>{style.value}</style>;\r\n      }\r\n      return <link key={i} href={style.value} type=\"text/css\" rel=\"stylesheet\" />;\r\n    });\r\n\r\n    if (!collection) {\r\n      <PreviewPaneFrame head={styleEls} />;\r\n    }\r\n\r\n    const initialContent = `\r\n<!DOCTYPE html>\r\n<html>\r\n  <head><base target=\"_blank\"/></head>\r\n  <body><div></div></body>\r\n</html>\r\n`;\r\n\r\n    return (\r\n      <ErrorBoundary>\r\n        <PreviewPaneFrame head={styleEls} initialContent={initialContent}>\r\n          <EditorPreviewContent {...{ previewComponent, previewProps }} />\r\n        </PreviewPaneFrame>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n}\r\n\r\nPreviewPane.propTypes = {\r\n  collection: ImmutablePropTypes.map.isRequired,\r\n  fields: ImmutablePropTypes.list.isRequired,\r\n  entry: ImmutablePropTypes.map.isRequired,\r\n  fieldsMetaData: ImmutablePropTypes.map.isRequired,\r\n  getAsset: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\nimport styled, { css } from 'react-emotion';\r\nimport { translate } from 'react-polyglot';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Icon,\r\n  Dropdown,\r\n  DropdownItem,\r\n  StyledDropdownButton,\r\n  colorsRaw,\r\n  colors,\r\n  components,\r\n  buttons,\r\n  lengths,\r\n} from 'netlify-cms-ui-default';\r\nimport { status } from 'Constants/publishModes';\r\nimport SettingsDropdown from 'UI/SettingsDropdown';\r\n\r\nconst styles = {\r\n  buttonMargin: css`\r\n    margin: 0 10px;\r\n  `,\r\n  toolbarSection: css`\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    border: 0 solid ${colors.textFieldBorder};\r\n  `,\r\n};\r\n\r\nconst ToolbarContainer = styled.div`\r\n  box-shadow: 0 2px 6px 0 rgba(68, 74, 87, 0.05), 0 1px 3px 0 rgba(68, 74, 87, 0.1),\r\n    0 2px 54px rgba(0, 0, 0, 0.1);\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  min-width: 800px;\r\n  z-index: 300;\r\n  background-color: #fff;\r\n  height: 66px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ToolbarSectionMain = styled.div`\r\n  ${styles.toolbarSection};\r\n  flex: 10;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0 10px;\r\n`;\r\n\r\nconst ToolbarSubSectionFirst = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst ToolbarSubSectionLast = styled(ToolbarSubSectionFirst)`\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst ToolbarSectionBackLink = styled(Link)`\r\n  ${styles.toolbarSection};\r\n  border-right-width: 1px;\r\n  font-weight: normal;\r\n  padding: 0 20px;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #f1f2f4;\r\n  }\r\n`;\r\n\r\nconst ToolbarSectionMeta = styled.div`\r\n  ${styles.toolbarSection};\r\n  border-left-width: 1px;\r\n  padding: 0 7px;\r\n`;\r\n\r\nconst ToolbarDropdown = styled(Dropdown)`\r\n  ${styles.buttonMargin};\r\n\r\n  ${Icon} {\r\n    color: ${colorsRaw.teal};\r\n  }\r\n`;\r\n\r\nconst BackArrow = styled.div`\r\n  color: ${colors.textLead};\r\n  font-size: 21px;\r\n  font-weight: 600;\r\n  margin-right: 16px;\r\n`;\r\n\r\nconst BackCollection = styled.div`\r\n  color: ${colors.textLead};\r\n  font-size: 14px;\r\n`;\r\n\r\nconst BackStatus = styled.div`\r\n  margin-top: 6px;\r\n`;\r\n\r\nconst BackStatusUnchanged = styled(BackStatus)`\r\n  ${components.textBadgeSuccess};\r\n\r\n  &::after {\r\n    height: 12px;\r\n    width: 15.5px;\r\n    color: ${colors.successText};\r\n    margin-left: 5px;\r\n\r\n    position: relative;\r\n    top: 1px;\r\n\r\n    content: url(\"data:image/svg+xml; utf8, <svg xmlns='http://www.w3.org/2000/svg' width='15' height='11'><path fill='#005614' fill-rule='nonzero' d='M4.016 11l-.648-.946a6.202 6.202 0 0 0-.157-.22 9.526 9.526 0 0 1-.096-.133l-.511-.7a7.413 7.413 0 0 0-.162-.214l-.102-.134-.265-.346a26.903 26.903 0 0 0-.543-.687l-.11-.136c-.143-.179-.291-.363-.442-.54l-.278-.332a8.854 8.854 0 0 0-.192-.225L.417 6.28l-.283-.324L0 5.805l1.376-1.602c.04.027.186.132.186.132l.377.272.129.095c.08.058.16.115.237.175l.37.28c.192.142.382.292.565.436l.162.126c.27.21.503.398.714.574l.477.393c.078.064.156.127.23.194l.433.375.171-.205A50.865 50.865 0 0 1 8.18 4.023a35.163 35.163 0 0 1 2.382-2.213c.207-.174.42-.349.635-.518l.328-.255.333-.245c.072-.055.146-.107.221-.159l.117-.083c.11-.077.225-.155.341-.23.163-.11.334-.217.503-.32l1.158 1.74a11.908 11.908 0 0 0-.64.55l-.065.06c-.07.062-.139.125-.207.192l-.258.249-.26.265c-.173.176-.345.357-.512.539a32.626 32.626 0 0 0-1.915 2.313 52.115 52.115 0 0 0-2.572 3.746l-.392.642-.19.322-.233.382H4.016z'/></svg>\");\r\n  }\r\n`;\r\n\r\nconst BackStatusChanged = styled(BackStatus)`\r\n  ${components.textBadgeDanger};\r\n`;\r\n\r\nconst ToolbarButton = styled.button`\r\n  ${buttons.button};\r\n  ${buttons.default};\r\n  ${styles.buttonMargin};\r\n  display: block;\r\n`;\r\n\r\nconst DeleteButton = styled(ToolbarButton)`\r\n  ${buttons.lightRed};\r\n`;\r\n\r\nconst SaveButton = styled(ToolbarButton)`\r\n  ${buttons.lightBlue};\r\n`;\r\n\r\nconst StatusPublished = styled.div`\r\n  ${styles.buttonMargin};\r\n  border: 1px solid ${colors.textFieldBorder};\r\n  border-radius: ${lengths.borderRadius};\r\n  background-color: ${colorsRaw.white};\r\n  color: ${colorsRaw.teal};\r\n  padding: 0 24px;\r\n  line-height: 36px;\r\n  cursor: default;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst PublishButton = styled(StyledDropdownButton)`\r\n  background-color: ${colorsRaw.teal};\r\n`;\r\n\r\nconst StatusButton = styled(StyledDropdownButton)`\r\n  background-color: ${colorsRaw.tealLight};\r\n  color: ${colorsRaw.teal};\r\n`;\r\n\r\nconst StatusDropdownItem = styled(DropdownItem)`\r\n  ${Icon} {\r\n    color: ${colors.infoText};\r\n  }\r\n`;\r\n\r\nclass EditorToolbar extends React.Component {\r\n  static propTypes = {\r\n    isPersisting: PropTypes.bool,\r\n    isPublishing: PropTypes.bool,\r\n    isUpdatingStatus: PropTypes.bool,\r\n    isDeleting: PropTypes.bool,\r\n    onPersist: PropTypes.func.isRequired,\r\n    onPersistAndNew: PropTypes.func.isRequired,\r\n    showDelete: PropTypes.bool.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onDeleteUnpublishedChanges: PropTypes.func.isRequired,\r\n    onChangeStatus: PropTypes.func.isRequired,\r\n    onPublish: PropTypes.func.isRequired,\r\n    onPublishAndNew: PropTypes.func.isRequired,\r\n    user: ImmutablePropTypes.map.isRequired,\r\n    hasChanged: PropTypes.bool,\r\n    displayUrl: PropTypes.string,\r\n    collection: ImmutablePropTypes.map.isRequired,\r\n    hasWorkflow: PropTypes.bool,\r\n    hasUnpublishedChanges: PropTypes.bool,\r\n    isNewEntry: PropTypes.bool,\r\n    isModification: PropTypes.bool,\r\n    currentStatus: PropTypes.string,\r\n    onLogoutClick: PropTypes.func.isRequired,\r\n    t: PropTypes.func.isRequired,\r\n  };\r\n\r\n  renderSimpleSaveControls = () => {\r\n    const { showDelete, onDelete, t } = this.props;\r\n    return (\r\n      <div>\r\n        {showDelete ? (\r\n          <DeleteButton onClick={onDelete}>{t('editor.editorToolbar.deleteEntry')}</DeleteButton>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderSimplePublishControls = () => {\r\n    const {\r\n      collection,\r\n      onPersist,\r\n      onPersistAndNew,\r\n      isPersisting,\r\n      hasChanged,\r\n      isNewEntry,\r\n      t,\r\n    } = this.props;\r\n    if (!isNewEntry && !hasChanged) {\r\n      return <StatusPublished>{t('editor.editorToolbar.published')}</StatusPublished>;\r\n    }\r\n    return (\r\n      <div>\r\n        <ToolbarDropdown\r\n          dropdownTopOverlap=\"40px\"\r\n          dropdownWidth=\"150px\"\r\n          renderButton={() => (\r\n            <PublishButton>\r\n              {isPersisting\r\n                ? t('editor.editorToolbar.publishing')\r\n                : t('editor.editorToolbar.publish')}\r\n            </PublishButton>\r\n          )}\r\n        >\r\n          <DropdownItem\r\n            label=\"Publish now\"\r\n            icon=\"arrow\"\r\n            iconDirection=\"right\"\r\n            onClick={onPersist}\r\n          />\r\n          {collection.get('create') ? (\r\n            <DropdownItem\r\n              label={t('editor.editorToolbar.publishAndCreateNew')}\r\n              icon=\"add\"\r\n              onClick={onPersistAndNew}\r\n            />\r\n          ) : null}\r\n        </ToolbarDropdown>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderWorkflowSaveControls = () => {\r\n    const {\r\n      onPersist,\r\n      onDelete,\r\n      onDeleteUnpublishedChanges,\r\n      showDelete,\r\n      hasChanged,\r\n      hasUnpublishedChanges,\r\n      isPersisting,\r\n      isDeleting,\r\n      isNewEntry,\r\n      isModification,\r\n      t,\r\n    } = this.props;\r\n\r\n    const deleteLabel =\r\n      (hasUnpublishedChanges &&\r\n        isModification &&\r\n        t('editor.editorToolbar.deleteUnpublishedChanges')) ||\r\n      (hasUnpublishedChanges &&\r\n        (isNewEntry || !isModification) &&\r\n        t('editor.editorToolbar.deleteUnpublishedEntry')) ||\r\n      (!hasUnpublishedChanges && !isModification && t('editor.editorToolbar.deletePublishedEntry'));\r\n\r\n    return [\r\n      <SaveButton key=\"save-button\" onClick={() => hasChanged && onPersist()}>\r\n        {isPersisting ? t('editor.editorToolbar.saving') : t('editor.editorToolbar.save')}\r\n      </SaveButton>,\r\n      !showDelete && !hasUnpublishedChanges && !isModification ? null : (\r\n        <DeleteButton\r\n          key=\"delete-button\"\r\n          onClick={hasUnpublishedChanges ? onDeleteUnpublishedChanges : onDelete}\r\n        >\r\n          {isDeleting ? t('editor.editorToolbar.deleting') : deleteLabel}\r\n        </DeleteButton>\r\n      ),\r\n    ];\r\n  };\r\n\r\n  renderWorkflowPublishControls = () => {\r\n    const {\r\n      collection,\r\n      isUpdatingStatus,\r\n      isPublishing,\r\n      onChangeStatus,\r\n      onPublish,\r\n      onPublishAndNew,\r\n      currentStatus,\r\n      isNewEntry,\r\n      t,\r\n    } = this.props;\r\n    if (currentStatus) {\r\n      return (\r\n        <>\r\n          <ToolbarDropdown\r\n            dropdownTopOverlap=\"40px\"\r\n            dropdownWidth=\"120px\"\r\n            renderButton={() => (\r\n              <StatusButton>\r\n                {isUpdatingStatus\r\n                  ? t('editor.editorToolbar.updating')\r\n                  : t('editor.editorToolbar.setStatus')}\r\n              </StatusButton>\r\n            )}\r\n          >\r\n            <StatusDropdownItem\r\n              label={t('editor.editorToolbar.draft')}\r\n              onClick={() => onChangeStatus('DRAFT')}\r\n              icon={currentStatus === status.get('DRAFT') && 'check'}\r\n            />\r\n            <StatusDropdownItem\r\n              label={t('editor.editorToolbar.inReview')}\r\n              onClick={() => onChangeStatus('PENDING_REVIEW')}\r\n              icon={currentStatus === status.get('PENDING_REVIEW') && 'check'}\r\n            />\r\n            <StatusDropdownItem\r\n              label={t('editor.editorToolbar.ready')}\r\n              onClick={() => onChangeStatus('PENDING_PUBLISH')}\r\n              icon={currentStatus === status.get('PENDING_PUBLISH') && 'check'}\r\n            />\r\n          </ToolbarDropdown>\r\n          <ToolbarDropdown\r\n            dropdownTopOverlap=\"40px\"\r\n            dropdownWidth=\"150px\"\r\n            renderButton={() => (\r\n              <PublishButton>\r\n                {isPublishing\r\n                  ? t('editor.editorToolbar.publishing')\r\n                  : t('editor.editorToolbar.publish')}\r\n              </PublishButton>\r\n            )}\r\n          >\r\n            <DropdownItem\r\n              label={t('editor.editorToolbar.publishNow')}\r\n              icon=\"arrow\"\r\n              iconDirection=\"right\"\r\n              onClick={onPublish}\r\n            />\r\n            {collection.get('create') ? (\r\n              <DropdownItem\r\n                label={t('editor.editorToolbar.publishAndCreateNew')}\r\n                icon=\"add\"\r\n                onClick={onPublishAndNew}\r\n              />\r\n            ) : null}\r\n          </ToolbarDropdown>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (!isNewEntry) {\r\n      return <StatusPublished>{t('editor.editorToolbar.published')}</StatusPublished>;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { user, hasChanged, displayUrl, collection, hasWorkflow, onLogoutClick, t } = this.props;\r\n\r\n    return (\r\n      <ToolbarContainer>\r\n        <ToolbarSectionBackLink to={`/collections/${collection.get('name')}`}>\r\n          <BackArrow>←</BackArrow>\r\n          <div>\r\n            <BackCollection>\r\n              {t('editor.editorToolbar.backCollection', {\r\n                collectionLabel: collection.get('label'),\r\n              })}\r\n            </BackCollection>\r\n            {hasChanged ? (\r\n              <BackStatusChanged>{t('editor.editorToolbar.unsavedChanges')}</BackStatusChanged>\r\n            ) : (\r\n              <BackStatusUnchanged>{t('editor.editorToolbar.changesSaved')}</BackStatusUnchanged>\r\n            )}\r\n          </div>\r\n        </ToolbarSectionBackLink>\r\n        <ToolbarSectionMain>\r\n          <ToolbarSubSectionFirst>\r\n            {hasWorkflow ? this.renderWorkflowSaveControls() : this.renderSimpleSaveControls()}\r\n          </ToolbarSubSectionFirst>\r\n          <ToolbarSubSectionLast>\r\n            {hasWorkflow\r\n              ? this.renderWorkflowPublishControls()\r\n              : this.renderSimplePublishControls()}\r\n          </ToolbarSubSectionLast>\r\n        </ToolbarSectionMain>\r\n        <ToolbarSectionMeta>\r\n          <SettingsDropdown\r\n            displayUrl={displayUrl}\r\n            imageUrl={user.get('avatar_url')}\r\n            onLogoutClick={onLogoutClick}\r\n          />\r\n        </ToolbarSectionMeta>\r\n      </ToolbarContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default translate()(EditorToolbar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'react-emotion';\r\nimport { Icon, colors, colorsRaw, shadows, buttons } from 'netlify-cms-ui-default';\r\n\r\nconst EditorToggleButton = styled.button`\r\n  ${buttons.button};\r\n  ${shadows.dropMiddle};\r\n  background-color: ${colorsRaw.white};\r\n  color: ${props => colors[props.isActive ? `active` : `inactive`]};\r\n  border-radius: 32px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  padding: 0;\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nconst EditorToggle = ({ enabled, active, onClick, icon }) =>\r\n  !enabled ? null : (\r\n    <EditorToggleButton onClick={onClick} isActive={active}>\r\n      <Icon type={icon} size=\"large\" />\r\n    </EditorToggleButton>\r\n  );\r\n\r\nEditorToggle.propTypes = {\r\n  enabled: PropTypes.bool,\r\n  active: PropTypes.bool,\r\n  onClick: PropTypes.func.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default EditorToggle;\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\nimport styled, { css, injectGlobal } from 'react-emotion';\r\nimport SplitPane from 'react-split-pane';\r\nimport { colors, colorsRaw, components, transitions } from 'netlify-cms-ui-default';\r\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\r\nimport EditorControlPane from './EditorControlPane/EditorControlPane';\r\nimport EditorPreviewPane from './EditorPreviewPane/EditorPreviewPane';\r\nimport EditorToolbar from './EditorToolbar';\r\nimport EditorToggle from './EditorToggle';\r\n\r\nconst PREVIEW_VISIBLE = 'cms.preview-visible';\r\nconst SCROLL_SYNC_ENABLED = 'cms.scroll-sync-enabled';\r\n\r\nconst styles = {\r\n  splitPane: css`\r\n    ${components.card};\r\n    border-radius: 0;\r\n    height: 100%;\r\n  `,\r\n  pane: css`\r\n    height: 100%;\r\n    overflow-y: auto;\r\n  `,\r\n};\r\n\r\ninjectGlobal`\r\n  /**\r\n   * React Split Pane\r\n   */\r\n  .Resizer.vertical {\r\n    width: 21px;\r\n    cursor: col-resize;\r\n    position: relative;\r\n    transition: background-color ${transitions.main};\r\n\r\n    &:before {\r\n      content: '';\r\n      width: 1px;\r\n      height: 100%;\r\n      position: relative;\r\n      left: 10px;\r\n      background-color: ${colors.textFieldBorder};\r\n      display: block;\r\n    }\r\n\r\n    &:hover,\r\n    &:active {\r\n      background-color: ${colorsRaw.GrayLight};\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nconst StyledSplitPane = styled(SplitPane)`\r\n  ${styles.splitPane};\r\n\r\n  /**\r\n   * Quick fix for preview pane not fully displaying in Safari\r\n   */\r\n  .Pane {\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst NoPreviewContainer = styled.div`\r\n  ${styles.splitPane};\r\n`;\r\n\r\nconst EditorContainer = styled.div`\r\n  width: 100%;\r\n  min-width: 800px;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  overflow: hidden;\r\n  padding-top: 66px;\r\n  background-color: ${colors.background};\r\n`;\r\n\r\nconst Editor = styled.div`\r\n  max-width: 1600px;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n`;\r\n\r\nconst PreviewPaneContainer = styled.div`\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  pointer-events: ${props => (props.blockEntry ? 'none' : 'auto')};\r\n`;\r\n\r\nconst ControlPaneContainer = styled(PreviewPaneContainer)`\r\n  padding: 0 16px;\r\n  position: relative;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nconst ViewControls = styled.div`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  z-index: 299;\r\n`;\r\n\r\nclass EditorInterface extends Component {\r\n  state = {\r\n    showEventBlocker: false,\r\n    previewVisible: localStorage.getItem(PREVIEW_VISIBLE) !== 'false',\r\n    scrollSyncEnabled: localStorage.getItem(SCROLL_SYNC_ENABLED) !== 'false',\r\n  };\r\n\r\n  handleSplitPaneDragStart = () => {\r\n    this.setState({ showEventBlocker: true });\r\n  };\r\n\r\n  handleSplitPaneDragFinished = () => {\r\n    this.setState({ showEventBlocker: false });\r\n  };\r\n\r\n  handleOnPersist = (opts = {}) => {\r\n    const { createNew = false } = opts;\r\n    this.controlPaneRef.validate();\r\n    this.props.onPersist({ createNew });\r\n  };\r\n\r\n  handleOnPublish = (opts = {}) => {\r\n    const { createNew = false } = opts;\r\n    this.controlPaneRef.validate();\r\n    this.props.onPublish({ createNew });\r\n  };\r\n\r\n  handleTogglePreview = () => {\r\n    const newPreviewVisible = !this.state.previewVisible;\r\n    this.setState({ previewVisible: newPreviewVisible });\r\n    localStorage.setItem(PREVIEW_VISIBLE, newPreviewVisible);\r\n  };\r\n\r\n  handleToggleScrollSync = () => {\r\n    const newScrollSyncEnabled = !this.state.scrollSyncEnabled;\r\n    this.setState({ scrollSyncEnabled: newScrollSyncEnabled });\r\n    localStorage.setItem(SCROLL_SYNC_ENABLED, newScrollSyncEnabled);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      collection,\r\n      entry,\r\n      fields,\r\n      fieldsMetaData,\r\n      fieldsErrors,\r\n      getAsset,\r\n      onChange,\r\n      showDelete,\r\n      onDelete,\r\n      onDeleteUnpublishedChanges,\r\n      onChangeStatus,\r\n      onPublish,\r\n      onValidate,\r\n      user,\r\n      hasChanged,\r\n      displayUrl,\r\n      hasWorkflow,\r\n      hasUnpublishedChanges,\r\n      isNewEntry,\r\n      isModification,\r\n      currentStatus,\r\n      onLogoutClick,\r\n    } = this.props;\r\n\r\n    const { previewVisible, scrollSyncEnabled, showEventBlocker } = this.state;\r\n\r\n    const collectionPreviewEnabled = collection.getIn(['editor', 'preview'], true);\r\n\r\n    const editor = (\r\n      <ControlPaneContainer blockEntry={showEventBlocker}>\r\n        <EditorControlPane\r\n          collection={collection}\r\n          entry={entry}\r\n          fields={fields}\r\n          fieldsMetaData={fieldsMetaData}\r\n          fieldsErrors={fieldsErrors}\r\n          onChange={onChange}\r\n          onValidate={onValidate}\r\n          ref={c => (this.controlPaneRef = c)}\r\n        />\r\n      </ControlPaneContainer>\r\n    );\r\n\r\n    const editorWithPreview = (\r\n      <ScrollSync enabled={this.state.scrollSyncEnabled}>\r\n        <div>\r\n          <StyledSplitPane\r\n            maxSize={-100}\r\n            defaultSize=\"50%\"\r\n            onDragStarted={this.handleSplitPaneDragStart}\r\n            onDragFinished={this.handleSplitPaneDragFinished}\r\n          >\r\n            <ScrollSyncPane>{editor}</ScrollSyncPane>\r\n            <PreviewPaneContainer blockEntry={showEventBlocker}>\r\n              <EditorPreviewPane\r\n                collection={collection}\r\n                entry={entry}\r\n                fields={fields}\r\n                fieldsMetaData={fieldsMetaData}\r\n                getAsset={getAsset}\r\n              />\r\n            </PreviewPaneContainer>\r\n          </StyledSplitPane>\r\n        </div>\r\n      </ScrollSync>\r\n    );\r\n\r\n    return (\r\n      <EditorContainer>\r\n        <EditorToolbar\r\n          isPersisting={entry.get('isPersisting')}\r\n          isPublishing={entry.get('isPublishing')}\r\n          isUpdatingStatus={entry.get('isUpdatingStatus')}\r\n          isDeleting={entry.get('isDeleting')}\r\n          onPersist={this.handleOnPersist}\r\n          onPersistAndNew={() => this.handleOnPersist({ createNew: true })}\r\n          onDelete={onDelete}\r\n          onDeleteUnpublishedChanges={onDeleteUnpublishedChanges}\r\n          onChangeStatus={onChangeStatus}\r\n          showDelete={showDelete}\r\n          onPublish={onPublish}\r\n          onPublishAndNew={() => this.handleOnPublish({ createNew: true })}\r\n          user={user}\r\n          hasChanged={hasChanged}\r\n          displayUrl={displayUrl}\r\n          collection={collection}\r\n          hasWorkflow={hasWorkflow}\r\n          hasUnpublishedChanges={hasUnpublishedChanges}\r\n          isNewEntry={isNewEntry}\r\n          isModification={isModification}\r\n          currentStatus={currentStatus}\r\n          onLogoutClick={onLogoutClick}\r\n        />\r\n        <Editor>\r\n          <ViewControls>\r\n            <EditorToggle\r\n              enabled={collectionPreviewEnabled}\r\n              active={previewVisible}\r\n              onClick={this.handleTogglePreview}\r\n              icon=\"eye\"\r\n            />\r\n            <EditorToggle\r\n              enabled={collectionPreviewEnabled && previewVisible}\r\n              active={scrollSyncEnabled}\r\n              onClick={this.handleToggleScrollSync}\r\n              icon=\"scroll\"\r\n            />\r\n          </ViewControls>\r\n          {collectionPreviewEnabled && this.state.previewVisible ? (\r\n            editorWithPreview\r\n          ) : (\r\n            <NoPreviewContainer>{editor}</NoPreviewContainer>\r\n          )}\r\n        </Editor>\r\n      </EditorContainer>\r\n    );\r\n  }\r\n}\r\n\r\nEditorInterface.propTypes = {\r\n  collection: ImmutablePropTypes.map.isRequired,\r\n  entry: ImmutablePropTypes.map.isRequired,\r\n  fields: ImmutablePropTypes.list.isRequired,\r\n  fieldsMetaData: ImmutablePropTypes.map.isRequired,\r\n  fieldsErrors: ImmutablePropTypes.map.isRequired,\r\n  getAsset: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onValidate: PropTypes.func.isRequired,\r\n  onPersist: PropTypes.func.isRequired,\r\n  showDelete: PropTypes.bool.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onDeleteUnpublishedChanges: PropTypes.func.isRequired,\r\n  onPublish: PropTypes.func.isRequired,\r\n  onChangeStatus: PropTypes.func.isRequired,\r\n  user: ImmutablePropTypes.map.isRequired,\r\n  hasChanged: PropTypes.bool,\r\n  displayUrl: PropTypes.string,\r\n  hasWorkflow: PropTypes.bool,\r\n  hasUnpublishedChanges: PropTypes.bool,\r\n  isNewEntry: PropTypes.bool,\r\n  isModification: PropTypes.bool,\r\n  currentStatus: PropTypes.string,\r\n  onLogoutClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EditorInterface;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { EDITORIAL_WORKFLOW } from 'Constants/publishModes';\r\nimport { selectUnpublishedEntry } from 'Reducers';\r\nimport { selectAllowDeletion } from 'Reducers/collections';\r\nimport { loadUnpublishedEntry, persistUnpublishedEntry } from 'Actions/editorialWorkflow';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  const { collections } = state;\r\n  const isEditorialWorkflow = state.config.get('publish_mode') === EDITORIAL_WORKFLOW;\r\n  const collection = collections.get(ownProps.match.params.name);\r\n  const returnObj = {\r\n    isEditorialWorkflow,\r\n    showDelete: !ownProps.newEntry && selectAllowDeletion(collection),\r\n  };\r\n  if (isEditorialWorkflow) {\r\n    const slug = ownProps.match.params.slug;\r\n    const unpublishedEntry = selectUnpublishedEntry(state, collection.get('name'), slug);\r\n    if (unpublishedEntry) {\r\n      returnObj.unpublishedEntry = true;\r\n      returnObj.entry = unpublishedEntry;\r\n    }\r\n  }\r\n  return returnObj;\r\n}\r\n\r\nfunction mergeProps(stateProps, dispatchProps, ownProps) {\r\n  const { isEditorialWorkflow, unpublishedEntry } = stateProps;\r\n  const { dispatch } = dispatchProps;\r\n  const returnObj = {};\r\n\r\n  if (isEditorialWorkflow) {\r\n    // Overwrite loadEntry to loadUnpublishedEntry\r\n    returnObj.loadEntry = (collection, slug) => dispatch(loadUnpublishedEntry(collection, slug));\r\n\r\n    // Overwrite persistEntry to persistUnpublishedEntry\r\n    returnObj.persistEntry = collection =>\r\n      dispatch(persistUnpublishedEntry(collection, unpublishedEntry));\r\n  }\r\n\r\n  return {\r\n    ...ownProps,\r\n    ...stateProps,\r\n    ...returnObj,\r\n  };\r\n}\r\n\r\nexport default function withWorkflow(Editor) {\r\n  return connect(\r\n    mapStateToProps,\r\n    null,\r\n    mergeProps,\r\n  )(\r\n    class WorkflowEditor extends React.Component {\r\n      render() {\r\n        return <Editor {...this.props} />;\r\n      }\r\n    },\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\nimport { connect } from 'react-redux';\r\nimport { Loader } from 'netlify-cms-ui-default';\r\nimport { translate } from 'react-polyglot';\r\nimport history from 'Routing/history';\r\nimport { logoutUser } from 'Actions/auth';\r\nimport {\r\n  loadEntry,\r\n  loadEntries,\r\n  createDraftFromEntry,\r\n  createEmptyDraft,\r\n  discardDraft,\r\n  changeDraftField,\r\n  changeDraftFieldValidation,\r\n  persistEntry,\r\n  deleteEntry,\r\n} from 'Actions/entries';\r\nimport {\r\n  updateUnpublishedEntryStatus,\r\n  publishUnpublishedEntry,\r\n  deleteUnpublishedEntry,\r\n} from 'Actions/editorialWorkflow';\r\nimport { deserializeValues } from 'Lib/serializeEntryValues';\r\nimport { selectEntry, selectUnpublishedEntry, getAsset } from 'Reducers';\r\nimport { selectFields } from 'Reducers/collections';\r\nimport { status } from 'Constants/publishModes';\r\nimport { EDITORIAL_WORKFLOW } from 'Constants/publishModes';\r\nimport EditorInterface from './EditorInterface';\r\nimport withWorkflow from './withWorkflow';\r\n\r\nconst navigateCollection = collectionPath => history.push(`/collections/${collectionPath}`);\r\nconst navigateToCollection = collectionName => navigateCollection(collectionName);\r\nconst navigateToNewEntry = collectionName => navigateCollection(`${collectionName}/new`);\r\nconst navigateToEntry = (collectionName, slug) =>\r\n  navigateCollection(`${collectionName}/entries/${slug}`);\r\n\r\nclass Editor extends React.Component {\r\n  static propTypes = {\r\n    boundGetAsset: PropTypes.func.isRequired,\r\n    changeDraftField: PropTypes.func.isRequired,\r\n    changeDraftFieldValidation: PropTypes.func.isRequired,\r\n    collection: ImmutablePropTypes.map.isRequired,\r\n    createDraftFromEntry: PropTypes.func.isRequired,\r\n    createEmptyDraft: PropTypes.func.isRequired,\r\n    discardDraft: PropTypes.func.isRequired,\r\n    entry: ImmutablePropTypes.map,\r\n    entryDraft: ImmutablePropTypes.map.isRequired,\r\n    loadEntry: PropTypes.func.isRequired,\r\n    persistEntry: PropTypes.func.isRequired,\r\n    deleteEntry: PropTypes.func.isRequired,\r\n    showDelete: PropTypes.bool.isRequired,\r\n    fields: ImmutablePropTypes.list.isRequired,\r\n    slug: PropTypes.string,\r\n    newEntry: PropTypes.bool.isRequired,\r\n    displayUrl: PropTypes.string,\r\n    hasWorkflow: PropTypes.bool,\r\n    unpublishedEntry: PropTypes.bool,\r\n    isModification: PropTypes.bool,\r\n    collectionEntriesLoaded: PropTypes.bool,\r\n    updateUnpublishedEntryStatus: PropTypes.func.isRequired,\r\n    publishUnpublishedEntry: PropTypes.func.isRequired,\r\n    deleteUnpublishedEntry: PropTypes.func.isRequired,\r\n    logoutUser: PropTypes.func.isRequired,\r\n    loadEntries: PropTypes.func.isRequired,\r\n    currentStatus: PropTypes.string,\r\n    user: ImmutablePropTypes.map.isRequired,\r\n    location: PropTypes.shape({\r\n      pathname: PropTypes.string,\r\n    }),\r\n    hasChanged: PropTypes.bool,\r\n    t: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {\r\n      newEntry,\r\n      collection,\r\n      slug,\r\n      loadEntry,\r\n      createEmptyDraft,\r\n      loadEntries,\r\n      collectionEntriesLoaded,\r\n      t,\r\n    } = this.props;\r\n\r\n    if (newEntry) {\r\n      createEmptyDraft(collection);\r\n    } else {\r\n      loadEntry(collection, slug);\r\n    }\r\n\r\n    const leaveMessage = t('editor.editor.onLeavePage');\r\n\r\n    this.exitBlocker = event => {\r\n      if (this.props.entryDraft.get('hasChanged')) {\r\n        // This message is ignored in most browsers, but its presence\r\n        // triggers the confirmation dialog\r\n        event.returnValue = leaveMessage;\r\n        return leaveMessage;\r\n      }\r\n    };\r\n    window.addEventListener('beforeunload', this.exitBlocker);\r\n\r\n    const navigationBlocker = (location, action) => {\r\n      /**\r\n       * New entry being saved and redirected to it's new slug based url.\r\n       */\r\n      const isPersisting = this.props.entryDraft.getIn(['entry', 'isPersisting']);\r\n      const newRecord = this.props.entryDraft.getIn(['entry', 'newRecord']);\r\n      const newEntryPath = `/collections/${collection.get('name')}/new`;\r\n      if (\r\n        isPersisting &&\r\n        newRecord &&\r\n        this.props.location.pathname === newEntryPath &&\r\n        action === 'PUSH'\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      if (this.props.hasChanged) {\r\n        return leaveMessage;\r\n      }\r\n    };\r\n    const unblock = history.block(navigationBlocker);\r\n\r\n    /**\r\n     * This will run as soon as the location actually changes, unless creating\r\n     * a new post. The confirmation above will run first.\r\n     */\r\n    this.unlisten = history.listen((location, action) => {\r\n      const newEntryPath = `/collections/${collection.get('name')}/new`;\r\n      const entriesPath = `/collections/${collection.get('name')}/entries/`;\r\n      const { pathname } = location;\r\n      if (\r\n        pathname.startsWith(newEntryPath) ||\r\n        (pathname.startsWith(entriesPath) && action === 'PUSH')\r\n      ) {\r\n        return;\r\n      }\r\n      unblock();\r\n      this.unlisten();\r\n    });\r\n\r\n    if (!collectionEntriesLoaded) {\r\n      loadEntries(collection);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    /**\r\n     * If the old slug is empty and the new slug is not, a new entry was just\r\n     * saved, and we need to update navigation to the correct url using the\r\n     * slug.\r\n     */\r\n    const newSlug = this.props.entryDraft && this.props.entryDraft.getIn(['entry', 'slug']);\r\n    if (!prevProps.slug && newSlug && this.props.newEntry) {\r\n      navigateToEntry(prevProps.collection.get('name'), newSlug);\r\n      this.props.loadEntry(this.props.collection, newSlug);\r\n    }\r\n\r\n    if (prevProps.entry === this.props.entry) return;\r\n    const { entry, newEntry, fields, collection } = this.props;\r\n\r\n    if (entry && !entry.get('isFetching') && !entry.get('error')) {\r\n      /**\r\n       * Deserialize entry values for widgets with registered serializers before\r\n       * creating the entry draft.\r\n       */\r\n      const values = deserializeValues(entry.get('data'), fields);\r\n      const deserializedEntry = entry.set('data', values);\r\n      const fieldsMetaData = this.props.entryDraft && this.props.entryDraft.get('fieldsMetaData');\r\n      this.createDraft(deserializedEntry, fieldsMetaData);\r\n    } else if (newEntry) {\r\n      prevProps.createEmptyDraft(collection);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.discardDraft();\r\n    window.removeEventListener('beforeunload', this.exitBlocker);\r\n  }\r\n\r\n  createDraft = (entry, metadata) => {\r\n    if (entry) this.props.createDraftFromEntry(entry, metadata);\r\n  };\r\n\r\n  handleChangeStatus = newStatusName => {\r\n    const {\r\n      entryDraft,\r\n      updateUnpublishedEntryStatus,\r\n      collection,\r\n      slug,\r\n      currentStatus,\r\n      t,\r\n    } = this.props;\r\n    if (entryDraft.get('hasChanged')) {\r\n      window.alert(t('editor.editor.onUpdatingWithUnsavedChanges'));\r\n      return;\r\n    }\r\n    const newStatus = status.get(newStatusName);\r\n    updateUnpublishedEntryStatus(collection.get('name'), slug, currentStatus, newStatus);\r\n  };\r\n\r\n  handlePersistEntry = async (opts = {}) => {\r\n    const { createNew = false } = opts;\r\n    const {\r\n      persistEntry,\r\n      collection,\r\n      currentStatus,\r\n      hasWorkflow,\r\n      loadEntry,\r\n      slug,\r\n      createEmptyDraft,\r\n    } = this.props;\r\n\r\n    await persistEntry(collection);\r\n\r\n    if (createNew) {\r\n      navigateToNewEntry(collection.get('name'));\r\n      createEmptyDraft(collection);\r\n    } else if (slug && hasWorkflow && !currentStatus) {\r\n      loadEntry(collection, slug);\r\n    }\r\n  };\r\n\r\n  handlePublishEntry = async (opts = {}) => {\r\n    const { createNew = false } = opts;\r\n    const { publishUnpublishedEntry, entryDraft, collection, slug, currentStatus, t } = this.props;\r\n    if (currentStatus !== status.last()) {\r\n      window.alert(t('editor.editor.onPublishingNotReady'));\r\n      return;\r\n    } else if (entryDraft.get('hasChanged')) {\r\n      window.alert(t('editor.editor.onPublishingWithUnsavedChanges'));\r\n      return;\r\n    } else if (!window.confirm(t('editor.editor.onPublishing'))) {\r\n      return;\r\n    }\r\n\r\n    await publishUnpublishedEntry(collection.get('name'), slug);\r\n\r\n    if (createNew) {\r\n      navigateToNewEntry(collection.get('name'));\r\n    }\r\n  };\r\n\r\n  handleDeleteEntry = () => {\r\n    const { entryDraft, newEntry, collection, deleteEntry, slug, t } = this.props;\r\n    if (entryDraft.get('hasChanged')) {\r\n      if (!window.confirm(t('editor.editor.onDeleteWithUnsavedChanges'))) {\r\n        return;\r\n      }\r\n    } else if (!window.confirm(t('editor.editor.onDeletePublishedEntry'))) {\r\n      return;\r\n    }\r\n    if (newEntry) {\r\n      return navigateToCollection(collection.get('name'));\r\n    }\r\n\r\n    setTimeout(async () => {\r\n      await deleteEntry(collection, slug);\r\n      return navigateToCollection(collection.get('name'));\r\n    }, 0);\r\n  };\r\n\r\n  handleDeleteUnpublishedChanges = async () => {\r\n    const {\r\n      entryDraft,\r\n      collection,\r\n      slug,\r\n      deleteUnpublishedEntry,\r\n      loadEntry,\r\n      isModification,\r\n      t,\r\n    } = this.props;\r\n    if (\r\n      entryDraft.get('hasChanged') &&\r\n      !window.confirm(t('editor.editor.onDeleteUnpublishedChangesWithUnsavedChanges'))\r\n    ) {\r\n      return;\r\n    } else if (!window.confirm(t('editor.editor.onDeleteUnpublishedChanges'))) {\r\n      return;\r\n    }\r\n    await deleteUnpublishedEntry(collection.get('name'), slug);\r\n\r\n    if (isModification) {\r\n      loadEntry(collection, slug);\r\n    } else {\r\n      navigateToCollection(collection.get('name'));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      entry,\r\n      entryDraft,\r\n      fields,\r\n      boundGetAsset,\r\n      collection,\r\n      changeDraftField,\r\n      changeDraftFieldValidation,\r\n      user,\r\n      hasChanged,\r\n      displayUrl,\r\n      hasWorkflow,\r\n      unpublishedEntry,\r\n      newEntry,\r\n      isModification,\r\n      currentStatus,\r\n      logoutUser,\r\n      t,\r\n    } = this.props;\r\n\r\n    if (entry && entry.get('error')) {\r\n      return (\r\n        <div>\r\n          <h3>{entry.get('error')}</h3>\r\n        </div>\r\n      );\r\n    } else if (\r\n      entryDraft == null ||\r\n      entryDraft.get('entry') === undefined ||\r\n      (entry && entry.get('isFetching'))\r\n    ) {\r\n      return <Loader active>{t('editor.editor.loadingEntry')}</Loader>;\r\n    }\r\n\r\n    return (\r\n      <EditorInterface\r\n        entry={entryDraft.get('entry')}\r\n        getAsset={boundGetAsset}\r\n        collection={collection}\r\n        fields={fields}\r\n        fieldsMetaData={entryDraft.get('fieldsMetaData')}\r\n        fieldsErrors={entryDraft.get('fieldsErrors')}\r\n        onChange={changeDraftField}\r\n        onValidate={changeDraftFieldValidation}\r\n        onPersist={this.handlePersistEntry}\r\n        onDelete={this.handleDeleteEntry}\r\n        onDeleteUnpublishedChanges={this.handleDeleteUnpublishedChanges}\r\n        onChangeStatus={this.handleChangeStatus}\r\n        onPublish={this.handlePublishEntry}\r\n        showDelete={this.props.showDelete}\r\n        user={user}\r\n        hasChanged={hasChanged}\r\n        displayUrl={displayUrl}\r\n        hasWorkflow={hasWorkflow}\r\n        hasUnpublishedChanges={unpublishedEntry}\r\n        isNewEntry={newEntry}\r\n        isModification={isModification}\r\n        currentStatus={currentStatus}\r\n        onLogoutClick={logoutUser}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  const { collections, entryDraft, auth, config, entries } = state;\r\n  const slug = ownProps.match.params.slug;\r\n  const collection = collections.get(ownProps.match.params.name);\r\n  const collectionName = collection.get('name');\r\n  const newEntry = ownProps.newRecord === true;\r\n  const fields = selectFields(collection, slug);\r\n  const entry = newEntry ? null : selectEntry(state, collectionName, slug);\r\n  const boundGetAsset = getAsset.bind(null, state);\r\n  const user = auth && auth.get('user');\r\n  const hasChanged = entryDraft.get('hasChanged');\r\n  const displayUrl = config.get('display_url');\r\n  const hasWorkflow = config.get('publish_mode') === EDITORIAL_WORKFLOW;\r\n  const isModification = entryDraft.getIn(['entry', 'isModification']);\r\n  const collectionEntriesLoaded = !!entries.getIn(['pages', collectionName]);\r\n  const unpublishedEntry = selectUnpublishedEntry(state, collectionName, slug);\r\n  const currentStatus = unpublishedEntry && unpublishedEntry.getIn(['metaData', 'status']);\r\n  return {\r\n    collection,\r\n    collections,\r\n    newEntry,\r\n    entryDraft,\r\n    boundGetAsset,\r\n    fields,\r\n    slug,\r\n    entry,\r\n    user,\r\n    hasChanged,\r\n    displayUrl,\r\n    hasWorkflow,\r\n    isModification,\r\n    collectionEntriesLoaded,\r\n    currentStatus,\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    changeDraftField,\r\n    changeDraftFieldValidation,\r\n    loadEntry,\r\n    loadEntries,\r\n    createDraftFromEntry,\r\n    createEmptyDraft,\r\n    discardDraft,\r\n    persistEntry,\r\n    deleteEntry,\r\n    updateUnpublishedEntryStatus,\r\n    publishUnpublishedEntry,\r\n    deleteUnpublishedEntry,\r\n    logoutUser,\r\n  },\r\n)(withWorkflow(translate()(Editor)));\r\n"],"sourceRoot":""}