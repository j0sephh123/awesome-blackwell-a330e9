{"version":3,"sources":["webpack://netlify-cms/..-core/src/components/Collection/Sidebar.js","webpack://netlify-cms/..-core/src/constants/collectionViews.js","webpack://netlify-cms/..-core/src/components/Collection/CollectionTop.js","webpack://netlify-cms/..-core/src/components/Collection/Entries/EntryCard.js","webpack://netlify-cms/..-core/src/components/Collection/Entries/EntryListing.js","webpack://netlify-cms/..-core/src/components/Collection/Entries/Entries.js","webpack://netlify-cms/..-core/src/components/Collection/Entries/EntriesCollection.js","webpack://netlify-cms/..-core/src/components/Collection/Entries/EntriesSearch.js","webpack://netlify-cms/..-core/src/components/Collection/Collection.js"],"names":["styles","sidebarNavLinkActive","Object","index_esm","netlify_cms_ui_default","active","activeBackground","SidebarContainer","label","target","card","SidebarHeading","textLead","SearchContainer","SearchInput","borderRadius","blue","SidebarNavList","SidebarNavLink","NavLink","props","activeClassName","Sidebar_Sidebar","react_default","a","Component","[object Object]","args","super","_defineProperty","this","query","searchTerm","collection","collectionName","get","createElement","key","to","type","render","_this$props","collections","t","state","size","onChange","e","setState","value","onKeyDown","actions_collections","placeholder","toList","map","renderLink","ImmutablePropTypes_default","orderedMap","isRequired","prop_types_default","string","func","Collection_Sidebar","lib","VIEW_STYLE_LIST","CollectionTopContainer","cardTop","CollectionTopRow","CollectionTopHeading","cardTopHeading","CollectionTopNewButton","Link","button","dropDeep","default","gray","CollectionTopDescription","cardTopDescription","ViewControls","ViewControlsText","text","ViewControlsButton","isActive","CollectionTop","collectionLabel","collectionLabelSingular","collectionDescription","viewStyle","onChangeViewStyle","newEntryUrl","onClick","propTypes","oneOf","Collection_CollectionTop","ListCard","topCardWidth","ListCardLink","foreground","GridCard","GridCardLink","CollectionLabel","ListCardTitle","CardHeading","CardBody","hasImage","white","CardImage","url","Entries_EntryCard","entry","inferedFields","publicFolder","title","getIn","titleField","path","image","imageField","netlify_cms_lib_util","encodeURI","CardsGrid","EntryListing_EntryListing","EntryListing_defineProperty","cursor","handleCursorActions","create","actions","has","reducers_collections","descriptionField","fields","remainingFields","filter","f","indexOf","_this$props2","entries","entryCardProps","inferFields","idx","_extends","_this$props3","find","coll","immutable","isMap","renderCardsForSingleCollection","renderCardsForMultipleCollections","react_waypoint_es","onEnter","handleLoadMore","iterable","list","any","Entries","isFetching","loadingMessages","className","page","number","bool","Entries_Entries","EntriesCollection_EntriesCollection","EntriesCollection_defineProperty","action","traverseCollectionCursor","componentDidMount","entriesLoaded","loadEntries","componentDidUpdate","prevProps","_this$props4","partial_default","object","mapDispatchToProps","actions_entries","Entries_EntriesCollection","es","ownProps","config","reducers","rawCursor","cursors","clearData","EntriesSearch_EntriesSearch","EntriesSearch_defineProperty","isNaN","searchEntries","componentWillUnmount","clearSearch","getCursor","seq","EntriesSearch_mapDispatchToProps","search","Entries_EntriesSearch","toIndexedSeq","CollectionContainer","pageMargin","CollectionMain","Collection_Collection","Collection_defineProperty","isSearchResults","urlHelper","handleChangeViewStyle","renderEntriesSearch","renderEntriesCollection","__webpack_exports__","_match$params","match","params","name","first"],"mappings":"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","file":"dist/1.netlify-cms.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\nimport styled, { css } from 'react-emotion';\r\nimport { translate } from 'react-polyglot';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Icon, components, colors, colorsRaw, lengths } from 'netlify-cms-ui-default';\r\nimport { searchCollections } from 'Actions/collections';\r\n\r\nconst styles = {\r\n  sidebarNavLinkActive: css`\r\n    color: ${colors.active};\r\n    background-color: ${colors.activeBackground};\r\n    border-left-color: #4863c6;\r\n  `,\r\n};\r\n\r\nconst SidebarContainer = styled.aside`\r\n  ${components.card};\r\n  width: 250px;\r\n  padding: 8px 0 12px;\r\n  position: fixed;\r\n  max-height: calc(100vh - 112px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst SidebarHeading = styled.h2`\r\n  font-size: 23px;\r\n  font-weight: 600;\r\n  padding: 0;\r\n  margin: 18px 12px 12px;\r\n  color: ${colors.textLead};\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 12px;\r\n  position: relative;\r\n\r\n  ${Icon} {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 6px;\r\n    z-index: 2;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  background-color: #eff0f4;\r\n  border-radius: ${lengths.borderRadius};\r\n  font-size: 14px;\r\n  padding: 10px 6px 10px 32px;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: inset 0 0 0 2px ${colorsRaw.blue};\r\n  }\r\n`;\r\n\r\nconst SidebarNavList = styled.ul`\r\n  margin: 16px 0 0;\r\n  list-style: none;\r\n`;\r\n\r\nconst SidebarNavLink = styled(NavLink)`\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  align-items: center;\r\n  padding: 8px 12px;\r\n  border-left: 2px solid #fff;\r\n\r\n  ${Icon} {\r\n    margin-right: 8px;\r\n  }\r\n\r\n  ${props => css`\r\n    &:hover,\r\n    &:active,\r\n    &.${props.activeClassName} {\r\n      ${styles.sidebarNavLinkActive};\r\n    }\r\n  `};\r\n`;\r\n\r\nclass Sidebar extends React.Component {\r\n  static propTypes = {\r\n    collections: ImmutablePropTypes.orderedMap.isRequired,\r\n    searchTerm: PropTypes.string,\r\n    t: PropTypes.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    searchTerm: '',\r\n  };\r\n\r\n  state = { query: this.props.searchTerm };\r\n\r\n  renderLink = collection => {\r\n    const collectionName = collection.get('name');\r\n    return (\r\n      <li key={collectionName}>\r\n        <SidebarNavLink to={`/collections/${collectionName}`} activeClassName=\"sidebar-active\">\r\n          <Icon type=\"write\" />\r\n          {collection.get('label')}\r\n        </SidebarNavLink>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { collections, t } = this.props;\r\n    const { query } = this.state;\r\n\r\n    return (\r\n      <SidebarContainer>\r\n        <SidebarHeading>{t('collection.sidebar.collections')}</SidebarHeading>\r\n        <SearchContainer>\r\n          <Icon type=\"search\" size=\"small\" />\r\n          <SearchInput\r\n            onChange={e => this.setState({ query: e.target.value })}\r\n            onKeyDown={e => e.key === 'Enter' && searchCollections(query)}\r\n            placeholder={t('collection.sidebar.searchAll')}\r\n            value={query}\r\n          />\r\n        </SearchContainer>\r\n        <SidebarNavList>{collections.toList().map(this.renderLink)}</SidebarNavList>\r\n      </SidebarContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default translate()(Sidebar);\r\n","export const VIEW_STYLE_LIST = 'VIEW_STYLE_LIST';\r\nexport const VIEW_STYLE_GRID = 'VIEW_STYLE_GRID';\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport styled from 'react-emotion';\r\nimport { translate } from 'react-polyglot';\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon, components, buttons, shadows, colors } from 'netlify-cms-ui-default';\r\nimport { VIEW_STYLE_LIST, VIEW_STYLE_GRID } from 'Constants/collectionViews';\r\n\r\nconst CollectionTopContainer = styled.div`\r\n  ${components.cardTop};\r\n`;\r\n\r\nconst CollectionTopRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst CollectionTopHeading = styled.h1`\r\n  ${components.cardTopHeading};\r\n`;\r\n\r\nconst CollectionTopNewButton = styled(Link)`\r\n  ${buttons.button};\r\n  ${shadows.dropDeep};\r\n  ${buttons.default};\r\n  ${buttons.gray};\r\n\r\n  padding: 0 30px;\r\n`;\r\n\r\nconst CollectionTopDescription = styled.p`\r\n  ${components.cardTopDescription};\r\n`;\r\n\r\nconst ViewControls = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  margin-top: 24px;\r\n`;\r\n\r\nconst ViewControlsText = styled.span`\r\n  font-size: 14px;\r\n  color: ${colors.text};\r\n  margin-right: 12px;\r\n`;\r\n\r\nconst ViewControlsButton = styled.button`\r\n  ${buttons.button};\r\n  color: ${props => (props.isActive ? colors.active : '#b3b9c4')};\r\n  background-color: transparent;\r\n  display: block;\r\n  padding: 0;\r\n  margin: 0 4px;\r\n\r\n  &:last-child {\r\n    margin-right: 0;\r\n  }\r\n\r\n  ${Icon} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst CollectionTop = ({\r\n  collectionLabel,\r\n  collectionLabelSingular,\r\n  collectionDescription,\r\n  viewStyle,\r\n  onChangeViewStyle,\r\n  newEntryUrl,\r\n  t,\r\n}) => {\r\n  return (\r\n    <CollectionTopContainer>\r\n      <CollectionTopRow>\r\n        <CollectionTopHeading>{collectionLabel}</CollectionTopHeading>\r\n        {newEntryUrl ? (\r\n          <CollectionTopNewButton to={newEntryUrl}>\r\n            {t('collection.collectionTop.newButton', {\r\n              collectionLabel: collectionLabelSingular || collectionLabel,\r\n            })}\r\n          </CollectionTopNewButton>\r\n        ) : null}\r\n      </CollectionTopRow>\r\n      {collectionDescription ? (\r\n        <CollectionTopDescription>{collectionDescription}</CollectionTopDescription>\r\n      ) : null}\r\n      <ViewControls>\r\n        <ViewControlsText>{t('collection.collectionTop.viewAs')}:</ViewControlsText>\r\n        <ViewControlsButton\r\n          isActive={viewStyle === VIEW_STYLE_LIST}\r\n          onClick={() => onChangeViewStyle(VIEW_STYLE_LIST)}\r\n        >\r\n          <Icon type=\"list\" />\r\n        </ViewControlsButton>\r\n        <ViewControlsButton\r\n          isActive={viewStyle === VIEW_STYLE_GRID}\r\n          onClick={() => onChangeViewStyle(VIEW_STYLE_GRID)}\r\n        >\r\n          <Icon type=\"grid\" />\r\n        </ViewControlsButton>\r\n      </ViewControls>\r\n    </CollectionTopContainer>\r\n  );\r\n};\r\n\r\nCollectionTop.propTypes = {\r\n  collectionLabel: PropTypes.string.isRequired,\r\n  collectionLabelSingular: PropTypes.string,\r\n  collectionDescription: PropTypes.string,\r\n  viewStyle: PropTypes.oneOf([VIEW_STYLE_LIST, VIEW_STYLE_GRID]).isRequired,\r\n  onChangeViewStyle: PropTypes.func.isRequired,\r\n  newEntryUrl: PropTypes.string,\r\n  t: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default translate()(CollectionTop);\r\n","import React from 'react';\r\nimport styled from 'react-emotion';\r\nimport { Link } from 'react-router-dom';\r\nimport { resolvePath } from 'netlify-cms-lib-util';\r\nimport { colors, colorsRaw, components, lengths } from 'netlify-cms-ui-default';\r\nimport { VIEW_STYLE_LIST, VIEW_STYLE_GRID } from 'Constants/collectionViews';\r\n\r\nconst ListCard = styled.li`\r\n  ${components.card};\r\n  width: ${lengths.topCardWidth};\r\n  margin-left: 12px;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst ListCardLink = styled(Link)`\r\n  display: block;\r\n  max-width: 100%;\r\n  padding: 16px 22px;\r\n  &:hover {\r\n    background-color: ${colors.foreground};\r\n  }\r\n`;\r\n\r\nconst GridCard = styled.li`\r\n  ${components.card};\r\n  flex: 0 0 335px;\r\n  height: 240px;\r\n  overflow: hidden;\r\n  margin-left: 12px;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst GridCardLink = styled(Link)`\r\n  display: block;\r\n  &,\r\n  &:hover {\r\n    background-color: ${colors.foreground};\r\n    color: ${colors.text};\r\n  }\r\n`;\r\n\r\nconst CollectionLabel = styled.h2`\r\n  font-size: 12px;\r\n  color: ${colors.textLead};\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst ListCardTitle = styled.h2`\r\n  margin-bottom: 0;\r\n`;\r\n\r\nconst CardHeading = styled.h2`\r\n  margin: 0 0 2px;\r\n`;\r\n\r\nconst CardBody = styled.div`\r\n  padding: 16px 22px;\r\n  height: 90px;\r\n  position: relative;\r\n  margin-bottom: ${props => props.hasImage && 0};\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    display: block;\r\n    z-index: 1;\r\n    bottom: 0;\r\n    left: -20%;\r\n    height: 140%;\r\n    width: 140%;\r\n    box-shadow: inset 0 -15px 24px ${colorsRaw.white};\r\n  }\r\n`;\r\n\r\nconst CardImage = styled.div`\r\n  background-image: url(${props => props.url});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  height: 150px;\r\n`;\r\n\r\nconst EntryCard = ({\r\n  collection,\r\n  entry,\r\n  inferedFields,\r\n  publicFolder,\r\n  collectionLabel,\r\n  viewStyle = VIEW_STYLE_LIST,\r\n}) => {\r\n  const label = entry.get('label');\r\n  const title = label || entry.getIn(['data', inferedFields.titleField]);\r\n  const path = `/collections/${collection.get('name')}/entries/${entry.get('slug')}`;\r\n  let image = entry.getIn(['data', inferedFields.imageField]);\r\n  image = resolvePath(image, publicFolder);\r\n  if (image) {\r\n    image = encodeURI(image);\r\n  }\r\n\r\n  if (viewStyle === VIEW_STYLE_LIST) {\r\n    return (\r\n      <ListCard>\r\n        <ListCardLink to={path}>\r\n          {collectionLabel ? <CollectionLabel>{collectionLabel}</CollectionLabel> : null}\r\n          <ListCardTitle>{title}</ListCardTitle>\r\n        </ListCardLink>\r\n      </ListCard>\r\n    );\r\n  }\r\n\r\n  if (viewStyle === VIEW_STYLE_GRID) {\r\n    return (\r\n      <GridCard>\r\n        <GridCardLink to={path}>\r\n          <CardBody hasImage={image}>\r\n            {collectionLabel ? <CollectionLabel>{collectionLabel}</CollectionLabel> : null}\r\n            <CardHeading>{title}</CardHeading>\r\n          </CardBody>\r\n          {image ? <CardImage url={image} /> : null}\r\n        </GridCardLink>\r\n      </GridCard>\r\n    );\r\n  }\r\n};\r\n\r\nexport default EntryCard;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\nimport styled from 'react-emotion';\r\nimport Waypoint from 'react-waypoint';\r\nimport { Map } from 'immutable';\r\nimport { Cursor } from 'netlify-cms-lib-util';\r\nimport { selectFields, selectInferedField } from 'Reducers/collections';\r\nimport EntryCard from './EntryCard';\r\n\r\nconst CardsGrid = styled.ul`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  list-style-type: none;\r\n  margin-left: -12px;\r\n`;\r\n\r\nexport default class EntryListing extends React.Component {\r\n  static propTypes = {\r\n    publicFolder: PropTypes.string.isRequired,\r\n    collections: ImmutablePropTypes.iterable.isRequired,\r\n    entries: ImmutablePropTypes.list,\r\n    viewStyle: PropTypes.string,\r\n    cursor: PropTypes.any.isRequired,\r\n    handleCursorActions: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleLoadMore = () => {\r\n    const { cursor, handleCursorActions } = this.props;\r\n    if (Cursor.create(cursor).actions.has('append_next')) {\r\n      handleCursorActions('append_next');\r\n    }\r\n  };\r\n\r\n  inferFields = collection => {\r\n    const titleField = selectInferedField(collection, 'title');\r\n    const descriptionField = selectInferedField(collection, 'description');\r\n    const imageField = selectInferedField(collection, 'image');\r\n    const fields = selectFields(collection);\r\n    const inferedFields = [titleField, descriptionField, imageField];\r\n    const remainingFields =\r\n      fields && fields.filter(f => inferedFields.indexOf(f.get('name')) === -1);\r\n    return { titleField, descriptionField, imageField, remainingFields };\r\n  };\r\n\r\n  renderCardsForSingleCollection = () => {\r\n    const { collections, entries, publicFolder, viewStyle } = this.props;\r\n    const inferedFields = this.inferFields(collections);\r\n    const entryCardProps = { collection: collections, inferedFields, publicFolder, viewStyle };\r\n    return entries.map((entry, idx) => <EntryCard {...entryCardProps} entry={entry} key={idx} />);\r\n  };\r\n\r\n  renderCardsForMultipleCollections = () => {\r\n    const { collections, entries, publicFolder } = this.props;\r\n    return entries.map((entry, idx) => {\r\n      const collectionName = entry.get('collection');\r\n      const collection = collections.find(coll => coll.get('name') === collectionName);\r\n      const collectionLabel = collection.get('label');\r\n      const inferedFields = this.inferFields(collection);\r\n      const entryCardProps = { collection, entry, inferedFields, publicFolder, collectionLabel };\r\n      return <EntryCard {...entryCardProps} key={idx} />;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { collections } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <CardsGrid>\r\n          {Map.isMap(collections)\r\n            ? this.renderCardsForSingleCollection()\r\n            : this.renderCardsForMultipleCollections()}\r\n          <Waypoint onEnter={this.handleLoadMore} />\r\n        </CardsGrid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\nimport { translate } from 'react-polyglot';\r\nimport { Loader } from 'netlify-cms-ui-default';\r\nimport EntryListing from './EntryListing';\r\n\r\nconst Entries = ({\r\n  collections,\r\n  entries,\r\n  publicFolder,\r\n  isFetching,\r\n  viewStyle,\r\n  cursor,\r\n  handleCursorActions,\r\n  t,\r\n}) => {\r\n  const loadingMessages = [\r\n    t('collection.entries.loadingEntries'),\r\n    t('collection.entries.cachingEntries'),\r\n    t('collection.entries.longerLoading'),\r\n  ];\r\n\r\n  if (entries) {\r\n    return (\r\n      <EntryListing\r\n        collections={collections}\r\n        entries={entries}\r\n        publicFolder={publicFolder}\r\n        viewStyle={viewStyle}\r\n        cursor={cursor}\r\n        handleCursorActions={handleCursorActions}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (isFetching) {\r\n    return <Loader active>{loadingMessages}</Loader>;\r\n  }\r\n\r\n  return <div className=\"nc-collectionPage-noEntries\">No Entries</div>;\r\n};\r\n\r\nEntries.propTypes = {\r\n  collections: ImmutablePropTypes.map.isRequired,\r\n  entries: ImmutablePropTypes.list,\r\n  publicFolder: PropTypes.string.isRequired,\r\n  page: PropTypes.number,\r\n  isFetching: PropTypes.bool,\r\n  viewStyle: PropTypes.string,\r\n  cursor: PropTypes.any.isRequired,\r\n  handleCursorActions: PropTypes.func.isRequired,\r\n  t: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default translate()(Entries);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\nimport { connect } from 'react-redux';\r\nimport { partial } from 'lodash';\r\nimport { Cursor } from 'netlify-cms-lib-util';\r\nimport {\r\n  loadEntries as actionLoadEntries,\r\n  traverseCollectionCursor as actionTraverseCollectionCursor,\r\n} from 'Actions/entries';\r\nimport { selectEntries } from 'Reducers';\r\nimport { selectCollectionEntriesCursor } from 'Reducers/cursors';\r\nimport Entries from './Entries';\r\n\r\nclass EntriesCollection extends React.Component {\r\n  static propTypes = {\r\n    collection: ImmutablePropTypes.map.isRequired,\r\n    publicFolder: PropTypes.string.isRequired,\r\n    entries: ImmutablePropTypes.list,\r\n    isFetching: PropTypes.bool.isRequired,\r\n    viewStyle: PropTypes.string,\r\n    cursor: PropTypes.object.isRequired,\r\n    loadEntries: PropTypes.func.isRequired,\r\n    traverseCollectionCursor: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { collection, entriesLoaded, loadEntries } = this.props;\r\n    if (collection && !entriesLoaded) {\r\n      loadEntries(collection);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { collection, entriesLoaded, loadEntries } = this.props;\r\n    if (collection !== prevProps.collection && !entriesLoaded) {\r\n      loadEntries(collection);\r\n    }\r\n  }\r\n\r\n  handleCursorActions = (cursor, action) => {\r\n    const { collection, traverseCollectionCursor } = this.props;\r\n    traverseCollectionCursor(collection, action);\r\n  };\r\n\r\n  render() {\r\n    const { collection, entries, publicFolder, isFetching, viewStyle, cursor } = this.props;\r\n\r\n    return (\r\n      <Entries\r\n        collections={collection}\r\n        entries={entries}\r\n        publicFolder={publicFolder}\r\n        isFetching={isFetching}\r\n        collectionName={collection.get('label')}\r\n        viewStyle={viewStyle}\r\n        cursor={cursor}\r\n        handleCursorActions={partial(this.handleCursorActions, cursor)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  const { collection, viewStyle } = ownProps;\r\n  const { config } = state;\r\n  const publicFolder = config.get('public_folder');\r\n  const page = state.entries.getIn(['pages', collection.get('name'), 'page']);\r\n\r\n  const entries = selectEntries(state, collection.get('name'));\r\n  const entriesLoaded = !!state.entries.getIn(['pages', collection.get('name')]);\r\n  const isFetching = state.entries.getIn(['pages', collection.get('name'), 'isFetching'], false);\r\n\r\n  const rawCursor = selectCollectionEntriesCursor(state.cursors, collection.get('name'));\r\n  const cursor = Cursor.create(rawCursor).clearData();\r\n\r\n  return { publicFolder, collection, page, entries, entriesLoaded, isFetching, viewStyle, cursor };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  loadEntries: actionLoadEntries,\r\n  traverseCollectionCursor: actionTraverseCollectionCursor,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(EntriesCollection);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\nimport { connect } from 'react-redux';\r\nimport { Cursor } from 'netlify-cms-lib-util';\r\nimport { selectSearchedEntries } from 'Reducers';\r\nimport {\r\n  searchEntries as actionSearchEntries,\r\n  clearSearch as actionClearSearch,\r\n} from 'Actions/search';\r\nimport Entries from './Entries';\r\n\r\nclass EntriesSearch extends React.Component {\r\n  static propTypes = {\r\n    isFetching: PropTypes.bool,\r\n    searchEntries: PropTypes.func.isRequired,\r\n    clearSearch: PropTypes.func.isRequired,\r\n    searchTerm: PropTypes.string.isRequired,\r\n    collections: ImmutablePropTypes.seq,\r\n    entries: ImmutablePropTypes.list,\r\n    page: PropTypes.number,\r\n    publicFolder: PropTypes.string,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { searchTerm, searchEntries } = this.props;\r\n    searchEntries(searchTerm);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.searchTerm === this.props.searchTerm) return;\r\n    const { searchEntries } = prevProps;\r\n    searchEntries(this.props.searchTerm);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.clearSearch();\r\n  }\r\n\r\n  getCursor = () => {\r\n    const { page } = this.props;\r\n    return Cursor.create({\r\n      actions: isNaN(page) ? [] : ['append_next'],\r\n    });\r\n  };\r\n\r\n  handleCursorActions = action => {\r\n    const { page, searchTerm, searchEntries } = this.props;\r\n    if (action === 'append_next') {\r\n      const nextPage = page + 1;\r\n      searchEntries(searchTerm, nextPage);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { collections, entries, publicFolder, isFetching } = this.props;\r\n    return (\r\n      <Entries\r\n        cursor={this.getCursor()}\r\n        handleCursorActions={this.handleCursorActions}\r\n        collections={collections}\r\n        entries={entries}\r\n        publicFolder={publicFolder}\r\n        isFetching={isFetching}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  const { searchTerm } = ownProps;\r\n  const collections = ownProps.collections.toIndexedSeq();\r\n  const isFetching = state.search.get('isFetching');\r\n  const page = state.search.get('page');\r\n  const entries = selectSearchedEntries(state);\r\n  const publicFolder = state.config.get('public_folder');\r\n\r\n  return { isFetching, page, collections, entries, publicFolder, searchTerm };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  searchEntries: actionSearchEntries,\r\n  clearSearch: actionClearSearch,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(EntriesSearch);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\nimport styled from 'react-emotion';\r\nimport { connect } from 'react-redux';\r\nimport { lengths } from 'netlify-cms-ui-default';\r\nimport { getNewEntryUrl } from 'Lib/urlHelper';\r\nimport Sidebar from './Sidebar';\r\nimport CollectionTop from './CollectionTop';\r\nimport EntriesCollection from './Entries/EntriesCollection';\r\nimport EntriesSearch from './Entries/EntriesSearch';\r\nimport { VIEW_STYLE_LIST } from 'Constants/collectionViews';\r\n\r\nconst CollectionContainer = styled.div`\r\n  margin: ${lengths.pageMargin};\r\n`;\r\n\r\nconst CollectionMain = styled.main`\r\n  padding-left: 280px;\r\n`;\r\n\r\nclass Collection extends React.Component {\r\n  static propTypes = {\r\n    searchTerm: PropTypes.string,\r\n    collectionName: PropTypes.string,\r\n    isSearchResults: PropTypes.bool,\r\n    collection: ImmutablePropTypes.map.isRequired,\r\n    collections: ImmutablePropTypes.orderedMap.isRequired,\r\n  };\r\n\r\n  state = {\r\n    viewStyle: VIEW_STYLE_LIST,\r\n  };\r\n\r\n  renderEntriesCollection = () => {\r\n    const { collection } = this.props;\r\n    return <EntriesCollection collection={collection} viewStyle={this.state.viewStyle} />;\r\n  };\r\n\r\n  renderEntriesSearch = () => {\r\n    const { searchTerm, collections } = this.props;\r\n    return <EntriesSearch collections={collections} searchTerm={searchTerm} />;\r\n  };\r\n\r\n  handleChangeViewStyle = viewStyle => {\r\n    if (this.state.viewStyle !== viewStyle) {\r\n      this.setState({ viewStyle });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { collection, collections, collectionName, isSearchResults, searchTerm } = this.props;\r\n    const newEntryUrl = collection.get('create') ? getNewEntryUrl(collectionName) : '';\r\n    return (\r\n      <CollectionContainer>\r\n        <Sidebar collections={collections} searchTerm={searchTerm} />\r\n        <CollectionMain>\r\n          {isSearchResults ? null : (\r\n            <CollectionTop\r\n              collectionLabel={collection.get('label')}\r\n              collectionLabelSingular={collection.get('label_singular')}\r\n              collectionDescription={collection.get('description')}\r\n              newEntryUrl={newEntryUrl}\r\n              viewStyle={this.state.viewStyle}\r\n              onChangeViewStyle={this.handleChangeViewStyle}\r\n            />\r\n          )}\r\n          {isSearchResults ? this.renderEntriesSearch() : this.renderEntriesCollection()}\r\n        </CollectionMain>\r\n      </CollectionContainer>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  const { collections } = state;\r\n  const { isSearchResults, match } = ownProps;\r\n  const { name, searchTerm } = match.params;\r\n  const collection = name ? collections.get(name) : collections.first();\r\n  return { collection, collections, collectionName: name, isSearchResults, searchTerm };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Collection);\r\n"],"sourceRoot":""}